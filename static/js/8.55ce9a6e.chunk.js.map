{"version":3,"sources":["../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/polygon.js","../node_modules/d3-geo/node_modules/d3-array/src/ascending.js","../node_modules/d3-geo/node_modules/d3-array/src/bisect.js","../node_modules/d3-geo/node_modules/d3-array/src/bisector.js","../node_modules/d3-geo/node_modules/d3-array/src/cross.js","../node_modules/d3-geo/node_modules/d3-array/src/array.js","../node_modules/d3-geo/node_modules/d3-array/src/range.js","../node_modules/d3-geo/node_modules/d3-array/src/ticks.js","../node_modules/d3-geo/node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-geo/node_modules/d3-array/src/merge.js","../node_modules/d3-geo/node_modules/d3-array/src/zip.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/distance.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-geo/index.js","../node_modules/react-simple-maps/lib/utils.js","../node_modules/react-simple-maps/lib/MapGroup.js","../node_modules/react-simple-maps/lib/projectionConfig.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/react-simple-maps/lib/index.js","../node_modules/react-simple-maps/lib/ComposableMap.js","../node_modules/react-simple-maps/lib/projections.js","../node_modules/react-simple-maps/lib/ZoomableGroup.js","../node_modules/react-simple-maps/lib/ZoomableGlobe.js","../node_modules/react-simple-maps/lib/Geographies.js","../node_modules/react-simple-maps/lib/Geography.js","../node_modules/react-simple-maps/lib/Marker.js","../node_modules/react-simple-maps/lib/Markers.js","../node_modules/react-simple-maps/lib/Line.js","../node_modules/react-simple-maps/lib/Lines.js","../node_modules/react-simple-maps/lib/Annotation.js","../node_modules/react-simple-maps/lib/Annotations.js","../node_modules/react-simple-maps/lib/Graticule.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/airy.js","../node_modules/d3-geo-projection/src/aitoff.js","../node_modules/d3-geo-projection/src/armadillo.js","../node_modules/d3-geo-projection/src/august.js","../node_modules/d3-geo-projection/src/baker.js","../node_modules/d3-geo-projection/src/berghaus.js","../node_modules/d3-geo-projection/src/mollweide.js","../node_modules/d3-geo-projection/src/boggs.js","../node_modules/d3-geo-projection/src/parallel1.js","../node_modules/d3-geo-projection/src/sinusoidal.js","../node_modules/d3-geo-projection/src/bonne.js","../node_modules/d3-geo-projection/src/bottomley.js","../node_modules/d3-geo-projection/src/bromley.js","../node_modules/d3-geo-projection/src/chamberlin.js","../node_modules/d3-geo-projection/src/collignon.js","../node_modules/d3-geo-projection/src/craig.js","../node_modules/d3-geo-projection/src/craster.js","../node_modules/d3-geo-projection/src/cylindricalEqualArea.js","../node_modules/d3-geo-projection/src/cylindricalStereographic.js","../node_modules/d3-geo-projection/src/eckert1.js","../node_modules/d3-geo-projection/src/eckert2.js","../node_modules/d3-geo-projection/src/eckert3.js","../node_modules/d3-geo-projection/src/eckert4.js","../node_modules/d3-geo-projection/src/eckert5.js","../node_modules/d3-geo-projection/src/eckert6.js","../node_modules/d3-geo-projection/src/eisenlohr.js","../node_modules/d3-geo-projection/src/fahey.js","../node_modules/d3-geo-projection/src/foucaut.js","../node_modules/d3-geo-projection/src/gilbert.js","../node_modules/d3-geo-projection/src/gingery.js","../node_modules/d3-geo-projection/src/ginzburgPolyconic.js","../node_modules/d3-geo-projection/src/ginzburg4.js","../node_modules/d3-geo-projection/src/ginzburg5.js","../node_modules/d3-geo-projection/src/ginzburg6.js","../node_modules/d3-geo-projection/src/ginzburg8.js","../node_modules/d3-geo-projection/src/ginzburg9.js","../node_modules/d3-geo-projection/src/square.js","../node_modules/d3-geo-projection/src/gringorten.js","../node_modules/d3-geo-projection/src/elliptic.js","../node_modules/d3-geo-projection/src/guyou.js","../node_modules/d3-geo-projection/src/hammer.js","../node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/ascending.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/bisect.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/bisector.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/cross.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/array.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/range.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/ticks.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/merge.js","../node_modules/d3-geo-projection/node_modules/d3-array/src/zip.js","../node_modules/d3-geo-projection/src/healpix.js","../node_modules/d3-geo-projection/src/hill.js","../node_modules/d3-geo-projection/src/sinuMollweide.js","../node_modules/d3-geo-projection/src/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/index.js","../node_modules/d3-geo-projection/src/interrupted/boggs.js","../node_modules/d3-geo-projection/src/interrupted/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/mollweide.js","../node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js","../node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js","../node_modules/d3-geo-projection/src/interrupted/sinusoidal.js","../node_modules/d3-geo-projection/src/kavrayskiy7.js","../node_modules/d3-geo-projection/src/lagrange.js","../node_modules/d3-geo-projection/src/larrivee.js","../node_modules/d3-geo-projection/src/laskowski.js","../node_modules/d3-geo-projection/src/littrow.js","../node_modules/d3-geo-projection/src/loximuthal.js","../node_modules/d3-geo-projection/src/miller.js","../node_modules/d3-geo-projection/src/modifiedStereographic.js","../node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","../node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","../node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","../node_modules/d3-geo-projection/src/naturalEarth.js","../node_modules/d3-geo-projection/src/nellHammer.js","../node_modules/d3-geo-projection/src/patterson.js","../node_modules/d3-geo-projection/src/polyconic.js","../node_modules/d3-geo-projection/src/polyhedral/matrix.js","../node_modules/d3-geo-projection/src/polyhedral/index.js","../node_modules/d3-geo-projection/src/polyhedral/octahedron.js","../node_modules/d3-geo-projection/src/polyhedral/butterfly.js","../node_modules/d3-geo-projection/src/polyhedral/collignon.js","../node_modules/d3-geo-projection/src/polyhedral/waterman.js","../node_modules/d3-geo-projection/src/noop.js","../node_modules/d3-geo-projection/src/project/index.js","../node_modules/d3-geo-projection/src/project/clockwise.js","../node_modules/d3-geo-projection/src/project/contains.js","../node_modules/d3-geo-projection/src/quincuncial/index.js","../node_modules/d3-geo-projection/src/quincuncial/gringorten.js","../node_modules/d3-geo-projection/src/quincuncial/peirce.js","../node_modules/d3-geo-projection/src/quantize.js","../node_modules/d3-geo-projection/src/rectangularPolyconic.js","../node_modules/d3-geo-projection/src/robinson.js","../node_modules/d3-geo-projection/src/satellite.js","../node_modules/d3-geo-projection/src/stitch.js","../node_modules/d3-geo-projection/src/times.js","../node_modules/d3-geo-projection/src/twoPoint.js","../node_modules/d3-geo-projection/src/twoPointAzimuthal.js","../node_modules/d3-geo-projection/src/twoPointEquidistant.js","../node_modules/d3-geo-projection/src/vanDerGrinten.js","../node_modules/d3-geo-projection/src/vanDerGrinten2.js","../node_modules/d3-geo-projection/src/vanDerGrinten3.js","../node_modules/d3-geo-projection/src/vanDerGrinten4.js","../node_modules/d3-geo-projection/src/wagner4.js","../node_modules/d3-geo-projection/src/wagner6.js","../node_modules/d3-geo-projection/src/wagner7.js","../node_modules/d3-geo-projection/src/wiechel.js","../node_modules/d3-geo-projection/src/winkel3.js","../node_modules/d3-geo-projection/index.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-scale/src/ordinal.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/index.js","../node_modules/topojson-client/src/identity.js","../node_modules/topojson-client/src/transform.js","../node_modules/topojson-client/src/bbox.js","../node_modules/topojson-client/src/reverse.js","../node_modules/topojson-client/src/feature.js","../node_modules/topojson-client/src/stitch.js","../node_modules/topojson-client/src/mesh.js","../node_modules/topojson-client/src/merge.js","../node_modules/topojson-client/src/bisect.js","../node_modules/topojson-client/src/neighbors.js","../node_modules/topojson-client/src/quantize.js","../node_modules/topojson-client/src/untransform.js","../node_modules/topojson-client/index.js"],"names":["adder","Adder","this","reset","prototype","constructor","s","t","add","y","_add","temp","valueOf","a","b","x","bv","av","epsilon","pi","Math","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","ceil","exp","log","floor","pow","sin","math_sign","sign","sqrt","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","i","n","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","bounds_linePoint","p","normal","inflection","phii","delta","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","merged","deltaMax","Infinity","sort","NaN","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","m","centroid","constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","rotate","forward","circleStream","radius","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","src_circle","ring","center","precision","circle","c","apply","arguments","r","_","buffer","line","lines","rejoin","pop","concat","shift","result","clip_line","x0","y0","x1","y1","ax","ay","dx","dy","pointEqual","Intersection","points","other","entry","o","e","clip_polygon","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","polygon_link","start","current","isSubject","array","ascending","ascendingBisect","compare","f","left","lo","hi","mid","right","bisector","array_array","Array","src_range","slice","map","stop","max","merge","arrays","j","clipMax","clipMin","extent_clipExtent","visible","from","to","a1","corner","comparePoint","ca","cb","polygon","x__","y__","v__","x_","y_","v_","first","clean","activeStream","bufferStream","clipStream","linePoint","winding","a0","b0","b1","polygonInside","cleanInside","min","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","_stream","extent","polygonContains_sum","polygonContains","angle","point0","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","phi1","absDelta","arc","intersection","phiArc","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","X","Y","DX","DY","graticule","filter","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","A","src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","join","src_path","projection","projectionStream","contextStream","path","src_clip","pointVisible","clipLine","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","ringSegments","validSegment","clip_antimeridian","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clip_circle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","polar","q1","code","c0","v0","v00","point2","src_transform","methods","transformer","TransformStream","key","fit_fitExtent","h","clipExtent","scale","translate","fit_fitSize","size","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","projection_projection","projectionMutator","projectAt","projectRotate","theta","preclip","postclip","projectResample","projectTransform","recenter","clipAngle","fitExtent","fitSize","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","fy","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","g","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","scaleTranslate","kx","ky","tx","ty","projection_identity","sx","sy","transform","reflectX","reflectY","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","__webpack_require__","__webpack_exports__","Object","defineProperty","exports","value","calculateResizeFactor","actualDimension","baseDimension","calculateMousePosition","props","zoom","resizeFactor","undefined","width","height","reference","canRotate","reverseRotation","item","returner","isChildOfType","createNewChildren","children","child","_react2","default","cloneElement","groupName","itemName","roundPath","replace","round","createConnectorPath","connectorType","endPoint","curve","e0","e1","createTextAnchor","computeBackdrop","backdrop","originalRotation","tl","br","obj","_react","__esModule","expectedTypes","indexOf","componentIdentifier","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","MapGroup","_Component","instance","TypeError","_classCallCheck","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","setPrototypeOf","_inherits","Component","_props","style","createElement","className","defaultProps","xOffset","yOffset","module","_toConsumableArray","arr","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","toString","_iterableToArray","_nonIterableSpread","_ComposableMap","get","_interopRequireDefault","_ZoomableGroup","_ZoomableGlobe","_Geographies","_Geography","_Marker","_Markers","_Line","_Lines","_MapGroup","_Annotation","_Annotations","_Graticule","_projections2","_projectionConfig2","ComposableMap","_this","bind","projectionConfig","_props2","showCenter","aspectRatio","viewBox","defs","preserveAspectRatio","fill","config","projectionName","baseProjection","projectionReference","_d3GeoProjection","_d3Geo","_projectionConfig","geoMercator","miller","geoMiller","times","geoTimes","robinson","geoRobinson","winkel3","geoWinkel3","eckert4","geoEckert4","geoAlbersUsa","geoOrthographic","_utils","ZoomableGroup","state","mouseX","mouseY","mouseXStart","mouseYStart","isPressed","resizeFactorX","resizeFactorY","handleMouseMove","handleMouseUp","handleMouseDown","handleTouchStart","handleTouchMove","handleResize","_ref","pageX","pageY","disablePanning","setState","_ref2","touches","onMoveEnd","_state","_ref3","_state2","onMoveStart","_ref4","evt","preventDefault","nextProps","_state3","_props3","zoomFactor","centerChanged","JSON","stringify","_props4","zoomableGroupNode","parentNode","getBoundingClientRect","xPercentageChange","yPercentageChange","_props5","window","addEventListener","preventTouchScroll","removeEventListener","_this2","_props6","_state4","ref","onMouseMove","onMouseUp","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","strokeWidth","ZoomableGlobe","initialRotation","clientX","clientY","differenceX","differenceY","sensitivity","newCenter","currentCenter","zoomableGlobeNode","_topojsonClient","Geographies","geographyPaths","shouldFetchGeographies","geography","parseGeographies","fetchGeographies","nextState","disableOptimization","geographyUrl","console","warn","cancelPendingRequest","objects","keys","request","XMLHttpRequest","open","onload","status","parse","responseText","onGeographyPathsLoaded","String","onerror","send","_xhr","abort","_extends","assign","source","pathCache","Geography","hover","pressed","handleMouseEnter","handleMouseLeave","handleMouseClick","handleFocus","handleBlur","persist","onClick","onMouseEnter","onMouseLeave","_props7","onFocus","_props8","onBlur","_props9","cacheId","tabable","pathString","geoPath","renderPath","excludeProps","restProps","reduce","tabIndex","Marker","marker","preserveMarkerAspect","translation","lineString","isHidden","geoLength","_MapGroup2","Markers","_objectWithoutProperties","Line","end","buildPath","buildLineString","startLineString","endLineString","Lines","Annotation","hiddenStyle","stroke","markerEnd","connectorPath","textAnchor","Annotations","computeGraticule","geoGraticule","computeOutline","Graticule","renderGraticule","graticulePath","outlinePath","globe","pointerEvents","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","async","skipTempReset","prev","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","math_max","math_min","math_epsilon","epsilon2","sqrt1_2","SQRT1_2","sqrt2","sqrtPi","sinh","cosh","airyRaw","beta","tanBeta_2","cosx","cosy","siny","cosz","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","airy","d3_geo","aitoffRaw","sincia","sinci","sinx","sinx_2","cosx_2","sin_2y","sin2y","cos2y","sin2x_2","fx","dxdx","dxdy","dydx","dydy","aitoff","armadilloRaw","sPhi0","tanPhi0","cosLambda","sinLambda","dxdLambda","dxdPhi","dydLambda","dydPhi","denominator","dPhi","armadillo","stream_","parallel","rotateStream","sphereStream","augustRaw","tanPhi","sin3Eta","eta","xi","arcosh","arsinh","cosEta","coshXi","august","sqrt8","baker_phi0","bakerRaw","cosPhi_2","tanPhi_2","baker","berghausRaw","lobes","theta0","α","cotα","berghaus","sr","delta0","mollweideBromleyTheta","cp","cpsinPhi","mollweideBromleyRaw","mollweideRaw","mollweide","boggs_k","boggs_w","boggsRaw","boggs","parallel1","sinusoidalRaw","sinusoidal","bonneRaw","cotPhi0","rho","bonne","bottomleyRaw","sinPsi","bottomley","fraction","bromleyRaw","bromley","chamberlin_distance","s1","s2","cosdLambda","sindPhi","sindLambda","longitude","chamberlinRaw","p2","beta0","beta1","beta2","mean","chamberlinAfrica","chamberlin","R","collignonRaw","alpha","collignon","craigRaw","cosλ","craig","sqrt3","crasterRaw","craster","cylindricalEqualArea","cylindricalStereographicRaw","cylindricalStereographic","eckert1Raw","eckert1","eckert2Raw","eckert2","eckert3Raw","eckert3","eckert4Raw","eckert5Raw","eckert5","eckert6Raw","eckert6","eisenlohrK","eisenlohrRaw","s0","_0","_1","cos1","v2","vm1v","vp1v","deltatDeltaLambda","deltatDeltaPhi","deltacDeltat","deltacDeltaLambda","deltacDeltaPhi","deltavDeltaLambda","deltavDeltaPhi","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","eisenlohr","faheyK","faheyRaw","fahey","foucautRaw","cosk","foucaut","gilbertForward","gilbertInvert","src_gilbert","projectionType","gilbert","property","gingeryRaw","rho2","r2","rhoCosAlpha","k_","s_","gingeryLength","gingeryIntegrate","dTheta","x_halfPi","rhosinAlpha","sinRhoCosAlpha","halfPi_RhoCosAlpha","gingery","cRho","sRho","ginzburgPolyconic","xB","yB","m2","dAlphadLambda","xB2","dxBdPhi","dyBdPhi","dmdPhi","cosAlpha","sinAlpha","mcosAlpha","msinAlpha","dAlphadPhi","ginzburg4Raw","ginzburg4","ginzburg5Raw","ginzburg5","ginzburg6Raw","ginzburg6","ginzburg8Raw","lambda4","ginzburg8","ginzburg9Raw","ginzburg9","square","projectSquare","location","gringortenRaw","sLambda","sPhi","a2","secPhi","drdPhi","dp2dPhi","mu","nu","zeta","g2","zetaMug","f2","df","gringortenHexadecant","gringortenHexadecantInvert","gringorten","ellipticJ","ai","twon","ellipticF","guyouRaw","K","psi","at","y_1","guyouComplexAtan","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticFi","ellipticJi","tn","guyouComplexDivide","guyou","hammerRaw","hammerQuarticAuthalicRaw","hammer","coefficient","hammerRetroazimuthalRaw","hammerRetroazimuthalRotation","hammerRetroazimuthal","rotate_","healpixParallel","healpixLambert","healpixRaw","H","dy1","healpix","hillRaw","L","Bt","rho0","K2","L2","omega","sinTheta","cosTheta","Bt_Bt1","C","hill","ratio","sinuMollweidePhi","sinuMollweideY","sinuMollweideRaw","sinuMollweide","homolosineRaw","homolosine","interpolateLine","resampled","interrupted","lobe","interpolateSphere","bound","boggs_lobes","interrupted_boggs","homolosine_lobes","interrupted_homolosine","mollweide_lobes","interrupted_mollweide","mollweideHemispheres_lobes","mollweideHemispheres","sinuMollweide_lobes","interrupted_sinuMollweide","sinusoidal_lobes","interrupted_sinusoidal","kavrayskiy7Raw","kavrayskiy7","lagrangeRaw","lagrange","spacing","pi_sqrt2","larriveeRaw","sqrtcosPhi","sinPhi_2","sinLambda_6","cosLambda_6","f0","f1","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","larrivee","laskowskiRaw","lambdaPhi","laskowski","littrowRaw","y2_1","littrow","loximuthalRaw","loximuthal","millerRaw","modifiedStereographicRaw","zr","zi","ar","bi","deltar","deltai","sinc","gs48","gs50","modifiedStereographic_miller","lee","modifiedStereographicAlaska","modifiedStereographic","modifiedStereographicGs48","modifiedStereographicGs50","modifiedStereographicMiller","modifiedStereographicLee","coefficients","sqrt6","sqrt7","mtFlatPolarParabolicRaw","mtFlatPolarParabolic","mtFlatPolarQuarticRaw","sinTheta_2","mtFlatPolarQuartic","mtFlatPolarSinusoidalRaw","mtFlatPolarSinusoidal","naturalEarthRaw","phi4","naturalEarth","nellHammerRaw","nellHammer","pattersonK1","pattersonK2","pattersonK3","pattersonK4","pattersonC1","pattersonC2","pattersonC3","pattersonC4","pattersonRaw","yc","patterson","polyconicRaw","polyconic","polyhedral_matrix","subtract","matrix_angle","matrix_length","multiply","polyhedral","root","face","node","recurse","parent","edges","faceEdges","shared","found","sharedEdge","polyhedral_pointEqual","hasInverse","faceInvert","inverse","faceDegrees","proj","edge","multiPoint","notPoles","inside","some","octahedron","polyhedral_octahedron","butterfly","faceProjection","faces","collignonK","polyhedral_collignon","waterman","w5","xyz","waterman_cartesian","hexagon","cornerNormals","parents","normals","cosphi","dot","src_project","projectFeature","projectFeatureCollection","projectGeometry","id","properties","projectGeometryCollection","sinkPoint","sinkLine","sinkPolygon","project_points","polygons","holes","clockwise","hole","yi","pj","xj","yj","quincuncial","projectQuincuncial","quincuncial_gringorten","peirce","quantize","digits","quantizePoint","toFixed","quantizePoints","quantizePolygon","quantizeGeometry","quantizeFeature","rectangularPolyconicRaw","E","cotPhi","rectangularPolyconic","robinson_K","robinsonRaw","i0","di","bx","by","yy","satelliteRaw","P","vertical","satelliteVerticalRaw","cosOmega","sinOmega","satellite","tilt","epsilonInverse","stitch_x0","x0e","stitch_x1","x1e","stitch_y0","y0e","stitch_y1","y1e","normalizePoint","clampPoint","clampPoints","extractFragments","fragments","pointk","xk","yk","fragmentBefore","stitchFeature","stitchGeometry","fragment","startFragment","endFragment","fragmentByStart","fragmentByEnd","index","stitchFragments","stitch","timesRaw","twoPoint","raw","twoPointAzimuthalRaw","cosd","twoPointAzimuthalUsa","twoPointAzimuthal","twoPointEquidistantRaw","lambdaa","lambdab","z02","tanLambda0","S","za","zb","cosza","coszb","twoPointEquidistantUsa","twoPointEquidistant","vanDerGrintenRaw","A2","G","P2","P2_A2","G_P2","Q","x2_y2","c3","m1","theta1","vanDerGrinten","vanDerGrinten2Raw","vanDerGrinten2","vanDerGrinten3Raw","vanDerGrinten3","vanDerGrinten4Raw","B2","C2","BC","B_C2","B_3C","D","D2","C_","B_C","F_","sqrtF","vanDerGrinten4","wagner4_A","wagner4_B","wagner4Raw","wagner4","wagner6Raw","wagner6","wagner7Raw","wagner7","wiechelRaw","sin1_Phi","wiechel","winkel3Raw","F","sinphi","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","dxdlambda","dxdphi","dydlambda","dydphi","dlambda","dphi","bisectRight","bisect","e10","e5","e2","ticks","count","tickIncrement","isFinite","power","LN10","tickStep","step0","step1","initRange","domain","src_constant","src_number","unit","continuous_identity","normalize","clamper","bimap","d0","d1","r1","polymap","copy","clamp","unknown","untransform","piecewise","output","input","src","rescale","rangeRound","continuous","src_tickFormat","specifier","d3_format_src","linearish","tickFormat","nice","i1","linear","identity","topology","src_bbox","bbox","bboxPoint","bboxGeometry","arcs","feature_feature","feature_object","transformPoint","stitchedArcs","emptyIndex","flush","dp","ends","fg","unshift","gf","mesh","meshArcs","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","mergeArcs","polygonsByArc","groups","extract","planarRingArea","group","neighbors","ki","src_neighbors","indexesByArc","geometryType","indexes","ij","ik","splice","bb"],"mappings":"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","file":"static/js/8.55ce9a6e.chunk.js","sourcesContent":["// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\nexport default function () {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n  return clip = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = _stream);\n    },\n    extent: function extent(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import length from \"./length\";\nvar coordinates = [null, null],\n    object = {\n  type: \"LineString\",\n  coordinates: coordinates\n};\nexport default function (a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}","import { default as polygonContains } from \"./polygonContains\";\nimport { default as distance } from \"./distance\";\nimport { epsilon, radians } from \"./math\";\nvar containsObjectType = {\n  Feature: function Feature(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function FeatureCollection(object, point) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      if (containsGeometry(features[i].geometry, point)) return true;\n    }\n\n    return false;\n  }\n};\nvar containsGeometryType = {\n  Sphere: function Sphere() {\n    return true;\n  },\n  Point: function Point(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function MultiPoint(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPoint(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  LineString: function LineString(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function MultiLineString(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsLine(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  Polygon: function Polygon(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function MultiPolygon(object, point) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      if (containsPolygon(coordinates[i], point)) return true;\n    }\n\n    return false;\n  },\n  GeometryCollection: function GeometryCollection(object, point) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      if (containsGeometry(geometries[i], point)) return true;\n    }\n\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function (object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);\n}","import { range } from \"d3-array\";\nimport { abs, ceil, epsilon } from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function (x) {\n    return y.map(function (y) {\n      return [x, y];\n    });\n  };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function (y) {\n    return x.map(function (x) {\n      return [x, y];\n    });\n  };\n}\n\nexport default function graticule() {\n  var x1,\n      x0,\n      X1,\n      X0,\n      y1,\n      y0,\n      Y1,\n      Y0,\n      dx = 10,\n      dy = dx,\n      DX = 90,\n      DY = 360,\n      x,\n      y,\n      X,\n      Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {\n      type: \"MultiLineString\",\n      coordinates: lines()\n    };\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X).concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n      return abs(x % DX) > epsilon;\n    }).map(x)).concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n      return abs(y % DY) > epsilon;\n    }).map(y));\n  }\n\n  graticule.lines = function () {\n    return lines().map(function (coordinates) {\n      return {\n        type: \"LineString\",\n        coordinates: coordinates\n      };\n    });\n  };\n\n  graticule.outline = function () {\n    return {\n      type: \"Polygon\",\n      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n    };\n  };\n\n  graticule.extent = function (_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function (_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function (_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function (_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function (_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function (_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function (_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule.extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]]).extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\nexport function graticule10() {\n  return graticule()();\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    return this._circle = circle(_), this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n  if (clip != null) projection.clipExtent(clip);\n  return projection.scale(k * 150).translate([x, y]);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport { clipExtent } from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { degrees, radians, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  dx,\n      dy,\n      lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      projectRotate,\n      // rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // clip extent\n  delta2 = 0.5,\n      projectResample = resample(projectTransform, delta2),\n      // precision\n  cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { degrees, pi, radians } from \"../math\";\nimport { projectionMutator } from \"./index\";\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function (_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}","import { abs, asin, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0),\n      n = (sy0 + sin(y1)) / 2; // Are the parallels symmetrical around the Equator?\n\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n  var c = 1 + sy0 * (2 * n - sy0),\n      r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function (x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);\n}","import { asin, cos, sin } from \"../math\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}","import conicEqualArea from \"./conicEqualArea\";\nexport default function () {\n  return conicEqualArea().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);\n}","import { epsilon } from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport { fitExtent, fitSize } from \"./fit\"; // The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\n\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function point(x, y) {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].point(x, y);\n      }\n    },\n    sphere: function sphere() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].sphere();\n      }\n    },\n    lineStart: function lineStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineStart();\n      }\n    },\n    lineEnd: function lineEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].lineEnd();\n      }\n    },\n    polygonStart: function polygonStart() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonStart();\n      }\n    },\n    polygonEnd: function polygonEnd() {\n      var i = -1;\n\n      while (++i < n) {\n        streams[i].polygonEnd();\n      }\n    }\n  };\n} // A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\n\nexport default function () {\n  var cache,\n      cacheStream,\n      lower48 = albers(),\n      lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),\n      alaskaPoint,\n      // EPSG:3338\n  hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),\n      hawaiiPoint,\n      // ESRI:102007\n  _point,\n      pointStream = {\n    point: function point(x, y) {\n      _point = [x, y];\n    }\n  };\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    return _point = null, (lower48Point.point(x, y), _point) || (alaskaPoint.point(x, y), _point) || (hawaiiPoint.point(x, y), _point);\n  }\n\n  albersUsa.invert = function (coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function (_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function (_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function (_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(),\n        x = +_[0],\n        y = +_[1];\n    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);\n    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]]).stream(pointStream);\n    return reset();\n  };\n\n  albersUsa.fitExtent = function (extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function (size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import { abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { mercatorRaw } from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) {\n      if (y < -halfPi + epsilon) y = -halfPi + epsilon;\n    } else {\n      if (y > halfPi - epsilon) y = halfPi - epsilon;\n    }\n\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function (x, y) {\n    var fy = f - y,\n        r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicConformalRaw).scale(109.5).parallels([30, 30]);\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import { clipExtent as _clipExtent } from \"../clip/extent\";\nimport identity from \"../identity\";\nimport { transformer } from \"../transform\";\nimport { fitExtent as _fitExtent, fitSize as _fitSize } from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function point(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function () {\n  var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      transform = identity,\n      // scale, translate and reflect\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      clip = identity,\n      // clip extent\n  cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function stream(_stream) {\n      return cache && cacheStream === _stream ? cache : cache = transform(clip(cacheStream = _stream));\n    },\n    clipExtent: function clipExtent(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : _clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function scale(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function translate(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function reflectX(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function reflectY(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function fitExtent(extent, object) {\n      return _fitExtent(projection, extent, object);\n    },\n    fitSize: function fitSize(size, object) {\n      return _fitSize(projection, size, object);\n    }\n  };\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","export { default as geoArea } from \"./src/area\";\nexport { default as geoBounds } from \"./src/bounds\";\nexport { default as geoCentroid } from \"./src/centroid\";\nexport { default as geoCircle } from \"./src/circle\";\nexport { default as geoClipExtent } from \"./src/clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\n\nexport { default as geoContains } from \"./src/contains\";\nexport { default as geoDistance } from \"./src/distance\";\nexport { default as geoGraticule, graticule10 as geoGraticule10 } from \"./src/graticule\";\nexport { default as geoInterpolate } from \"./src/interpolate\";\nexport { default as geoLength } from \"./src/length\";\nexport { default as geoPath } from \"./src/path/index\";\nexport { default as geoAlbers } from \"./src/projection/albers\";\nexport { default as geoAlbersUsa } from \"./src/projection/albersUsa\";\nexport { default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw } from \"./src/projection/azimuthalEqualArea\";\nexport { default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw } from \"./src/projection/azimuthalEquidistant\";\nexport { default as geoConicConformal, conicConformalRaw as geoConicConformalRaw } from \"./src/projection/conicConformal\";\nexport { default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw } from \"./src/projection/conicEqualArea\";\nexport { default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw } from \"./src/projection/conicEquidistant\";\nexport { default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw } from \"./src/projection/equirectangular\";\nexport { default as geoGnomonic, gnomonicRaw as geoGnomonicRaw } from \"./src/projection/gnomonic\";\nexport { default as geoIdentity } from \"./src/projection/identity\";\nexport { default as geoProjection, projectionMutator as geoProjectionMutator } from \"./src/projection/index\";\nexport { default as geoMercator, mercatorRaw as geoMercatorRaw } from \"./src/projection/mercator\";\nexport { default as geoOrthographic, orthographicRaw as geoOrthographicRaw } from \"./src/projection/orthographic\";\nexport { default as geoStereographic, stereographicRaw as geoStereographicRaw } from \"./src/projection/stereographic\";\nexport { default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw } from \"./src/projection/transverseMercator\";\nexport { default as geoRotation } from \"./src/rotation\";\nexport { default as geoStream } from \"./src/stream\";\nexport { default as geoTransform } from \"./src/transform\";","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateResizeFactor = calculateResizeFactor;\nexports.calculateMousePosition = calculateMousePosition;\nexports.isChildOfType = isChildOfType;\nexports.createNewChildren = createNewChildren;\nexports.roundPath = roundPath;\nexports.createConnectorPath = createConnectorPath;\nexports.createTextAnchor = createTextAnchor;\nexports.computeBackdrop = computeBackdrop;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction calculateResizeFactor(actualDimension, baseDimension) {\n  if (actualDimension === 0) return 1;\n  return 1 / 100 * (100 / actualDimension * baseDimension);\n}\n\nfunction calculateMousePosition(direction, projection, props, zoom, resizeFactor) {\n  var center = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : props.center;\n  var width = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : props.width;\n  var height = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : props.height;\n  var reference = {\n    x: 0,\n    y: 1\n  };\n  var canRotate = !!projection.rotate;\n  var reverseRotation = !!canRotate ? projection.rotate().map(function (item) {\n    return -item;\n  }) : false;\n  var point = !!reverseRotation ? projection.rotate(reverseRotation)([-center[0], -center[1]]) : projection([center[0], center[1]]);\n  var returner = point ? (point[reference[direction]] - (reference[direction] === 0 ? width : height) / 2) * zoom * (1 / resizeFactor) : 0;\n  if (canRotate) projection.rotate([-reverseRotation[0], -reverseRotation[1], -reverseRotation[2]]);\n  return !!reverseRotation ? returner : -returner;\n}\n\nfunction isChildOfType(child, expectedTypes) {\n  return expectedTypes.indexOf(child.props.componentIdentifier) !== -1;\n}\n\nfunction createNewChildren(children, props) {\n  if (!children) return;\n\n  if (!children.length) {\n    return isChildOfType(children, [\"Geographies\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection\n    }) : isChildOfType(children, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(children, {\n      projection: props.projection,\n      zoom: props.zoom,\n      width: props.width,\n      height: props.height,\n      groupName: props.groupName,\n      itemName: props.itemName\n    }) : children;\n  } else {\n    return children.map(function (child, i) {\n      if (!child) return;\n      return isChildOfType(child, [\"Geographies\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection\n      }) : isChildOfType(child, [\"Group\", \"Markers\", \"Lines\", \"Annotations\", \"Annotation\", \"Graticule\"]) ? _react2.default.cloneElement(child, {\n        key: \"zoomable-child-\" + i,\n        projection: props.projection,\n        zoom: props.zoom,\n        width: props.width,\n        height: props.height,\n        groupName: props.groupName,\n        itemName: props.itemName\n      }) : child;\n    });\n  }\n}\n\nfunction roundPath(path, precision) {\n  if (!path) return;\n  var query = /[\\d\\.-][\\d\\.e-]*/g;\n  return path.replace(query, function (n) {\n    return Math.round(n * (1 / precision)) / (1 / precision);\n  });\n}\n\nfunction createConnectorPath(connectorType, endPoint, curve) {\n  var e0 = endPoint[0];\n  var e1 = endPoint[1];\n  return \"M0,0 Q \" + (curve + 1) / 2 * e0 + \",\" + (e1 - (curve + 1) / 2 * e1) + \" \" + e0 + \",\" + e1;\n}\n\nfunction createTextAnchor(dx) {\n  if (dx > 0) return \"start\";else if (dx < 0) return \"end\";else return \"middle\";\n}\n\nfunction computeBackdrop(projection, backdrop) {\n  var canRotate = projection.rotate;\n  var originalRotation = canRotate ? projection.rotate() : null;\n  var tl = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[0], backdrop.y[0]]) : projection([backdrop.x[0], backdrop.y[0]]);\n  var br = canRotate ? projection.rotate([0, 0, 0])([backdrop.x[1], backdrop.y[1]]) : projection([backdrop.x[1], backdrop.y[1]]);\n  var x = tl ? tl[0] : 0;\n  var x0 = br ? br[0] : 0;\n  var y = tl ? tl[1] : 0;\n  var y0 = br ? br[1] : 0;\n  var width = x0 - x;\n  var height = y0 - y;\n  if (originalRotation) projection.rotate(originalRotation);\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MapGroup = function (_Component) {\n  _inherits(MapGroup, _Component);\n\n  function MapGroup() {\n    _classCallCheck(this, MapGroup);\n\n    return _possibleConstructorReturn(this, (MapGroup.__proto__ || Object.getPrototypeOf(MapGroup)).apply(this, arguments));\n  }\n\n  _createClass(MapGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          projection = _props.projection,\n          style = _props.style,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          groupName = _props.groupName,\n          itemName = _props.itemName;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-\" + groupName,\n        style: style\n      }, !children ? null : children.length === undefined ? _react2.default.cloneElement(children, {\n        projection: projection,\n        zoom: zoom,\n        width: width,\n        height: height\n      }) : children.map(function (child, i) {\n        return !child ? null : _react2.default.cloneElement(child, {\n          key: child.key || itemName + \"-\" + i,\n          projection: projection,\n          zoom: zoom,\n          width: width,\n          height: height\n        });\n      }));\n    }\n  }]);\n\n  return MapGroup;\n}(_react.Component);\n\nMapGroup.defaultProps = {\n  componentIdentifier: \"Group\",\n  groupName: \"group\",\n  itemName: \"group-item\"\n};\nexports.default = MapGroup;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = {\n  scale: 160,\n  xOffset: 0,\n  yOffset: 0,\n  rotation: [0, 0, 0],\n  precision: 0.1\n};","module.exports = require(\"regenerator-runtime\");\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ComposableMap = require(\"./ComposableMap\");\n\nObject.defineProperty(exports, \"ComposableMap\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ComposableMap).default;\n  }\n});\n\nvar _ZoomableGroup = require(\"./ZoomableGroup\");\n\nObject.defineProperty(exports, \"ZoomableGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGroup).default;\n  }\n});\n\nvar _ZoomableGlobe = require(\"./ZoomableGlobe\");\n\nObject.defineProperty(exports, \"ZoomableGlobe\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ZoomableGlobe).default;\n  }\n});\n\nvar _Geographies = require(\"./Geographies\");\n\nObject.defineProperty(exports, \"Geographies\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geographies).default;\n  }\n});\n\nvar _Geography = require(\"./Geography\");\n\nObject.defineProperty(exports, \"Geography\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Geography).default;\n  }\n});\n\nvar _Marker = require(\"./Marker\");\n\nObject.defineProperty(exports, \"Marker\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Marker).default;\n  }\n});\n\nvar _Markers = require(\"./Markers\");\n\nObject.defineProperty(exports, \"Markers\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Markers).default;\n  }\n});\n\nvar _Line = require(\"./Line\");\n\nObject.defineProperty(exports, \"Line\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Line).default;\n  }\n});\n\nvar _Lines = require(\"./Lines\");\n\nObject.defineProperty(exports, \"Lines\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Lines).default;\n  }\n});\n\nvar _MapGroup = require(\"./MapGroup\");\n\nObject.defineProperty(exports, \"MapGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_MapGroup).default;\n  }\n});\n\nvar _Annotation = require(\"./Annotation\");\n\nObject.defineProperty(exports, \"Annotation\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotation).default;\n  }\n});\n\nvar _Annotations = require(\"./Annotations\");\n\nObject.defineProperty(exports, \"Annotations\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Annotations).default;\n  }\n});\n\nvar _Graticule = require(\"./Graticule\");\n\nObject.defineProperty(exports, \"Graticule\", {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Graticule).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _projections = require(\"./projections\");\n\nvar _projections2 = _interopRequireDefault(_projections);\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ComposableMap = function (_Component) {\n  _inherits(ComposableMap, _Component);\n\n  function ComposableMap() {\n    _classCallCheck(this, ComposableMap);\n\n    var _this = _possibleConstructorReturn(this, (ComposableMap.__proto__ || Object.getPrototypeOf(ComposableMap)).call(this));\n\n    _this.projection = _this.projection.bind(_this);\n    return _this;\n  }\n\n  _createClass(ComposableMap, [{\n    key: \"projection\",\n    value: function projection() {\n      var _props = this.props,\n          projection = _props.projection,\n          projectionConfig = _props.projectionConfig,\n          width = _props.width,\n          height = _props.height;\n      return typeof projection !== \"function\" ? (0, _projections2.default)(width, height, projectionConfig, projection) : projection(width, height, projectionConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          style = _props2.style,\n          className = _props2.className,\n          showCenter = _props2.showCenter,\n          children = _props2.children,\n          aspectRatio = _props2.aspectRatio,\n          viewBox = _props2.viewBox,\n          defs = _props2.defs;\n      return _react2.default.createElement(\"svg\", {\n        width: width,\n        height: height,\n        viewBox: viewBox ? viewBox : \"0 0 \" + width + \" \" + height,\n        className: \"rsm-svg \" + (className || ''),\n        style: style,\n        preserveAspectRatio: aspectRatio\n      }, defs && _react2.default.createElement(\"defs\", null, defs), _react2.default.cloneElement(this.props.children, {\n        projection: this.projection(),\n        width: width,\n        height: height\n      }), showCenter && _react2.default.createElement(\"g\", null, _react2.default.createElement(\"rect\", {\n        x: width / 2 - 0.5,\n        y: 0,\n        width: 1,\n        height: height,\n        fill: \"#e91e63\"\n      }), _react2.default.createElement(\"rect\", {\n        x: 0,\n        y: height / 2 - 0.5,\n        width: width,\n        height: 1,\n        fill: \"#e91e63\"\n      })));\n    }\n  }]);\n\n  return ComposableMap;\n}(_react.Component);\n\nComposableMap.defaultProps = {\n  width: 800,\n  height: 450,\n  projection: \"times\",\n  projectionConfig: _projectionConfig2.default,\n  aspectRatio: \"xMidYMid\",\n  viewBox: null\n};\nexports.default = ComposableMap;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (width, height, config, projectionName) {\n  var scale = config.scale || _projectionConfig2.default.scale;\n  var xOffset = config.xOffset || _projectionConfig2.default.xOffset;\n  var yOffset = config.yOffset || _projectionConfig2.default.yOffset;\n  var rotation = config.rotation || _projectionConfig2.default.rotation;\n  var precision = config.precision || _projectionConfig2.default.precision;\n  var baseProjection = projectionReference[projectionName]().scale(scale).translate([xOffset + width / 2, yOffset + height / 2]).precision(precision);\n  return projectionName === \"albersUsa\" ? baseProjection : projectionName === \"orthographic\" ? baseProjection.rotate(rotation).clipAngle(90) : baseProjection.rotate(rotation);\n};\n\nvar _d3GeoProjection = require(\"d3-geo-projection\");\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _projectionConfig = require(\"./projectionConfig\");\n\nvar _projectionConfig2 = _interopRequireDefault(_projectionConfig);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar projectionReference = {\n  mercator: _d3Geo.geoMercator,\n  miller: _d3GeoProjection.geoMiller,\n  times: _d3GeoProjection.geoTimes,\n  robinson: _d3GeoProjection.geoRobinson,\n  winkel3: _d3GeoProjection.geoWinkel3,\n  eckert4: _d3GeoProjection.geoEckert4,\n  albersUsa: _d3Geo.geoAlbersUsa,\n  orthographic: _d3Geo.geoOrthographic\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGroup = function (_Component) {\n  _inherits(ZoomableGroup, _Component);\n\n  function ZoomableGroup(props) {\n    _classCallCheck(this, ZoomableGroup);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGroup.__proto__ || Object.getPrototypeOf(ZoomableGroup)).call(this, props));\n\n    var backdrop = (0, _utils.computeBackdrop)(props.projection, props.backdrop);\n    _this.state = {\n      mouseX: (0, _utils.calculateMousePosition)(\"x\", props.projection, props, props.zoom, 1),\n      mouseY: (0, _utils.calculateMousePosition)(\"y\", props.projection, props, props.zoom, 1),\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      resizeFactorX: 1,\n      resizeFactorY: 1,\n      backdrop: {\n        width: Math.round(backdrop.width),\n        height: Math.round(backdrop.height),\n        x: Math.round(backdrop.x),\n        y: Math.round(backdrop.y)\n      }\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    _this.handleResize = _this.handleResize.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGroup, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        mouseX: pageX - this.state.mouseXStart,\n        mouseY: pageY - this.state.mouseYStart\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY,\n          resizeFactorX = _state.resizeFactorX,\n          resizeFactorY = _state.resizeFactorY;\n      var _props = this.props,\n          zoom = _props.zoom,\n          width = _props.width,\n          height = _props.height,\n          projection = _props.projection,\n          onMoveEnd = _props.onMoveEnd;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var newCenter = projection.invert([x, y]);\n      onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY;\n      if (this.props.disablePanning) return;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY,\n          resizeFactorX = _state2.resizeFactorX,\n          resizeFactorY = _state2.resizeFactorY;\n      var _props2 = this.props,\n          zoom = _props2.zoom,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          onMoveStart = _props2.onMoveStart;\n      this.setState({\n        isPressed: true,\n        mouseXStart: pageX - mouseX,\n        mouseYStart: pageY - mouseY\n      });\n      if (!onMoveStart) return;\n      var x = width / 2 - mouseX * resizeFactorX / zoom;\n      var y = height / 2 - mouseY * resizeFactorY / zoom;\n      var currentCenter = projection.invert([x, y]);\n      onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state3 = this.state,\n          mouseX = _state3.mouseX,\n          mouseY = _state3.mouseY,\n          resizeFactorX = _state3.resizeFactorX,\n          resizeFactorY = _state3.resizeFactorY;\n      var _props3 = this.props,\n          projection = _props3.projection,\n          center = _props3.center,\n          zoom = _props3.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        mouseX: centerChanged ? (0, _utils.calculateMousePosition)(\"x\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorX) : mouseX * zoomFactor,\n        mouseY: centerChanged ? (0, _utils.calculateMousePosition)(\"y\", nextProps.projection, nextProps, nextProps.zoom, resizeFactorY) : mouseY * zoomFactor\n      });\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize() {\n      var _props4 = this.props,\n          width = _props4.width,\n          height = _props4.height,\n          projection = _props4.projection,\n          zoom = _props4.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      var xPercentageChange = 1 / resizeFactorX * this.state.resizeFactorX;\n      var yPercentageChange = 1 / resizeFactorY * this.state.resizeFactorY;\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: this.state.mouseX * xPercentageChange,\n        mouseY: this.state.mouseY * yPercentageChange\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props5 = this.props,\n          width = _props5.width,\n          height = _props5.height,\n          projection = _props5.projection,\n          zoom = _props5.zoom;\n      var resizeFactorX = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().width, width);\n      var resizeFactorY = (0, _utils.calculateResizeFactor)(this.zoomableGroupNode.parentNode.getBoundingClientRect().height, height);\n      this.setState({\n        resizeFactorX: resizeFactorX,\n        resizeFactorY: resizeFactorY,\n        mouseX: (0, _utils.calculateMousePosition)(\"x\", projection, this.props, zoom, resizeFactorX),\n        mouseY: (0, _utils.calculateMousePosition)(\"y\", projection, this.props, zoom, resizeFactorY)\n      });\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGroupNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props6 = this.props,\n          width = _props6.width,\n          height = _props6.height,\n          zoom = _props6.zoom,\n          style = _props6.style,\n          projection = _props6.projection,\n          children = _props6.children;\n      var _state4 = this.state,\n          mouseX = _state4.mouseX,\n          mouseY = _state4.mouseY,\n          resizeFactorX = _state4.resizeFactorX,\n          resizeFactorY = _state4.resizeFactorY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-group\",\n        ref: function ref(zoomableGroupNode) {\n          return _this2.zoomableGroupNode = zoomableGroupNode;\n        },\n        transform: \"\\n           translate(\\n             \" + Math.round((width / 2 + resizeFactorX * mouseX) * 100) / 100 + \"\\n             \" + Math.round((height / 2 + resizeFactorY * mouseY) * 100) / 100 + \"\\n           )\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, _react2.default.createElement(\"rect\", {\n        x: this.state.backdrop.x,\n        y: this.state.backdrop.y,\n        width: this.state.backdrop.width,\n        height: this.state.backdrop.height,\n        fill: \"transparent\",\n        style: {\n          strokeWidth: 0\n        }\n      }), (0, _utils.createNewChildren)(children, this.props));\n    }\n  }]);\n\n  return ZoomableGroup;\n}(_react.Component);\n\nZoomableGroup.defaultProps = {\n  center: [0, 0],\n  backdrop: {\n    x: [-179.9, 179.9],\n    y: [89.9, -89.9]\n  },\n  zoom: 1,\n  disablePanning: false\n};\nexports.default = ZoomableGroup;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ZoomableGlobe = function (_Component) {\n  _inherits(ZoomableGlobe, _Component);\n\n  function ZoomableGlobe(props) {\n    _classCallCheck(this, ZoomableGlobe);\n\n    var _this = _possibleConstructorReturn(this, (ZoomableGlobe.__proto__ || Object.getPrototypeOf(ZoomableGlobe)).call(this, props));\n\n    var initialRotation = props.projection.rotate();\n    _this.state = {\n      mouseX: 0,\n      mouseY: 0,\n      mouseXStart: 0,\n      mouseYStart: 0,\n      isPressed: false,\n      rotation: [initialRotation[0] - props.center[0], initialRotation[1] - props.center[1], initialRotation[2]]\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleTouchStart = _this.handleTouchStart.bind(_this);\n    _this.handleTouchMove = _this.handleTouchMove.bind(_this);\n    return _this;\n  }\n\n  _createClass(ZoomableGlobe, [{\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      var differenceX = clientX - this.state.mouseXStart;\n      var differenceY = clientY - this.state.mouseYStart;\n      this.setState({\n        mouseX: clientX,\n        mouseY: clientY,\n        mouseXStart: clientX,\n        mouseYStart: clientY,\n        rotation: [this.state.rotation[0] + differenceX * this.props.sensitivity, this.state.rotation[1] - differenceY * this.props.sensitivity, this.state.rotation[2]]\n      });\n    }\n  }, {\n    key: \"handleTouchMove\",\n    value: function handleTouchMove(_ref2) {\n      var touches = _ref2.touches;\n      this.handleMouseMove(touches[0]);\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {\n      if (this.props.disablePanning) return;\n      if (!this.state.isPressed) return;\n      this.setState({\n        isPressed: false\n      });\n      if (!this.props.onMoveEnd) return;\n      var newCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveEnd(newCenter);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(_ref3) {\n      var pageX = _ref3.pageX,\n          pageY = _ref3.pageY,\n          clientX = _ref3.clientX,\n          clientY = _ref3.clientY;\n      if (this.props.disablePanning) return;\n      this.setState({\n        isPressed: true,\n        mouseXStart: clientX,\n        mouseYStart: clientY\n      });\n      if (!this.props.onMoveStart) return;\n      var currentCenter = this.props.projection.invert([this.props.width / 2, this.props.height / 2]);\n      this.props.onMoveStart(currentCenter);\n    }\n  }, {\n    key: \"handleTouchStart\",\n    value: function handleTouchStart(_ref4) {\n      var touches = _ref4.touches;\n\n      if (touches.length > 1) {\n        this.handleMouseDown(touches[0]);\n      } else {\n        this.handleMouseUp();\n      }\n    }\n  }, {\n    key: \"preventTouchScroll\",\n    value: function preventTouchScroll(evt) {\n      if (evt.touches.length > 1) {\n        evt.preventDefault();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _state = this.state,\n          mouseX = _state.mouseX,\n          mouseY = _state.mouseY;\n      var _props = this.props,\n          projection = _props.projection,\n          center = _props.center,\n          zoom = _props.zoom;\n      var zoomFactor = nextProps.zoom / zoom;\n      var centerChanged = JSON.stringify(nextProps.center) !== JSON.stringify(center);\n      this.setState({\n        zoom: nextProps.zoom,\n        rotation: centerChanged ? [-nextProps.center[0], -nextProps.center[1], this.state.rotation[2]] : this.state.rotation\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height,\n          projection = _props2.projection,\n          zoom = _props2.zoom;\n      window.addEventListener(\"resize\", this.handleResize);\n      window.addEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.addEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n      window.removeEventListener(\"mouseup\", this.handleMouseUp);\n      this.zoomableGlobeNode.removeEventListener(\"touchmove\", this.preventTouchScroll);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props3 = this.props,\n          width = _props3.width,\n          height = _props3.height,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          projection = _props3.projection,\n          children = _props3.children;\n      var _state2 = this.state,\n          mouseX = _state2.mouseX,\n          mouseY = _state2.mouseY;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-zoomable-globe\",\n        ref: function ref(zoomableGlobeNode) {\n          return _this2.zoomableGlobeNode = zoomableGlobeNode;\n        },\n        transform: \"\\n           translate(\" + width / 2 + \" \" + height / 2 + \")\\n           scale(\" + zoom + \")\\n           translate(\" + -width / 2 + \" \" + -height / 2 + \")\\n         \",\n        onMouseMove: this.handleMouseMove,\n        onMouseUp: this.handleMouseUp,\n        onMouseDown: this.handleMouseDown,\n        onTouchStart: this.handleTouchStart,\n        onTouchMove: this.handleTouchMove,\n        onTouchEnd: this.handleMouseUp,\n        style: style\n      }, (0, _utils.createNewChildren)(children, {\n        width: width,\n        height: height,\n        center: this.center,\n        backdrop: this.backdrop,\n        zoom: this.props.zoom,\n        disablePanning: this.props.disablePanning,\n        children: children,\n        projection: projection.rotate(this.state.rotation)\n      }));\n    }\n  }]);\n\n  return ZoomableGlobe;\n}(_react.Component);\n\nZoomableGlobe.defaultProps = {\n  center: [0, 0],\n  zoom: 1,\n  disablePanning: false,\n  sensitivity: 0.25\n};\nexports.default = ZoomableGlobe;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _topojsonClient = require(\"topojson-client\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Geographies = function (_Component) {\n  _inherits(Geographies, _Component);\n\n  function Geographies(props) {\n    _classCallCheck(this, Geographies);\n\n    var _this = _possibleConstructorReturn(this, (Geographies.__proto__ || Object.getPrototypeOf(Geographies)).call(this, props));\n\n    _this.state = {\n      geographyPaths: _this.shouldFetchGeographies(props.geography) ? [] : _this.parseGeographies(props.geography)\n    };\n    return _this;\n  }\n\n  _createClass(Geographies, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.geography !== this.props.geography) {\n        if (this.shouldFetchGeographies(nextProps.geography)) {\n          this.fetchGeographies(nextProps.geography);\n        } else {\n          this.setState({\n            geographyPaths: this.parseGeographies(nextProps.geography)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var geoPathsChanged = nextState.geographyPaths.length !== this.state.geographyPaths.length;\n      return geoPathsChanged || nextProps.disableOptimization;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.geographyUrl || this.props.geographyPaths) {\n        console.warn(\"You are using the deprecated geographyUrl or geographyPaths props. Use the new geography prop instead. Check out the new docs here: https://github.com/zcreativelabs/react-simple-maps#Geographies-component\");\n      }\n\n      if (this.shouldFetchGeographies(this.props.geography)) {\n        this.fetchGeographies(this.props.geography);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelPendingRequest();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          style = _props.style,\n          children = _props.children;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-geographies\",\n        style: style\n      }, children(this.state.geographyPaths || [], projection));\n    }\n  }, {\n    key: \"shouldFetchGeographies\",\n    value: function shouldFetchGeographies(geography) {\n      return typeof geography === 'string';\n    }\n  }, {\n    key: \"parseGeographies\",\n    value: function parseGeographies(geography) {\n      if (Array.isArray(geography)) {\n        return geography;\n      }\n\n      if (Object.prototype.toString.call(geography) === '[object Object]') {\n        return (0, _topojsonClient.feature)(geography, geography.objects[Object.keys(geography.objects)[0]]).features;\n      }\n\n      return [];\n    }\n  }, {\n    key: \"fetchGeographies\",\n    value: function fetchGeographies(geography) {\n      var _this2 = this;\n\n      var request = new XMLHttpRequest();\n      request.open(\"GET\", geography, true);\n\n      request.onload = function () {\n        if (request.status >= 200 && request.status < 400) {\n          var geographyPaths = JSON.parse(request.responseText);\n\n          _this2.setState({\n            geographyPaths: _this2.parseGeographies(geographyPaths)\n          }, function () {\n            if (_this2.props.onGeographyPathsLoaded) {\n              _this2.props.onGeographyPathsLoaded(String(request.status));\n            }\n          });\n        } else {\n          if (_this2.props.onGeographyPathsLoaded) {\n            _this2.props.onGeographyPathsLoaded(String(request.status));\n          }\n        }\n      };\n\n      request.onerror = function () {\n        console.log(\"There was a connection error...\");\n      };\n\n      request.send();\n      this.cancelPendingRequest();\n      this._xhr = request;\n    }\n  }, {\n    key: \"cancelPendingRequest\",\n    value: function cancelPendingRequest() {\n      if (this._xhr) {\n        this._xhr.abort();\n\n        this._xhr = null;\n      }\n    }\n  }]);\n\n  return Geographies;\n}(_react.Component);\n\nGeographies.defaultProps = {\n  componentIdentifier: \"Geographies\",\n  disableOptimization: false,\n  geography: \"\"\n};\nexports.default = Geographies;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar pathCache = {};\n\nvar renderPath = function renderPath(cacheId, geography, projection, round, precision) {\n  if (pathCache[cacheId]) return pathCache[cacheId];\n  var pathString = cacheId ? pathCache[cacheId] ? pathCache[cacheId] : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography) : round ? (0, _utils.roundPath)((0, _d3Geo.geoPath)().projection(projection)(geography), precision) : (0, _d3Geo.geoPath)().projection(projection)(geography);\n  if (cacheId) pathCache[cacheId] = pathString;\n  return pathString;\n};\n\nvar Geography = function (_Component) {\n  _inherits(Geography, _Component);\n\n  function Geography() {\n    _classCallCheck(this, Geography);\n\n    var _this = _possibleConstructorReturn(this, (Geography.__proto__ || Object.getPrototypeOf(Geography)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Geography, [{\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      evt.persist();\n      var _props = this.props,\n          onClick = _props.onClick,\n          geography = _props.geography;\n      return onClick && onClick(geography, evt);\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props2 = this.props,\n          onMouseEnter = _props2.onMouseEnter,\n          geography = _props2.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props3 = this.props,\n          onMouseMove = _props3.onMouseMove,\n          geography = _props3.geography;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(geography, evt);\n        });\n      } else if (onMouseMove) onMouseMove(geography, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseLeave = _props4.onMouseLeave,\n          geography = _props4.geography;\n      this.setState({\n        hover: false,\n        pressed: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseDown = _props5.onMouseDown,\n          geography = _props5.geography;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props6 = this.props,\n          onMouseUp = _props6.onMouseUp,\n          geography = _props6.geography;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          geography = _props7.geography;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(geography, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          geography = _props8.geography;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(geography, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props9 = this.props,\n          geography = _props9.geography,\n          projection = _props9.projection,\n          round = _props9.round,\n          cacheId = _props9.cacheId,\n          precision = _props9.precision,\n          tabable = _props9.tabable,\n          style = _props9.style;\n      var _state = this.state,\n          hover = _state.hover,\n          pressed = _state.pressed;\n      var pathString = renderPath(cacheId, geography, projection, round, precision);\n      var excludeProps = [\"geography\", \"projection\", \"round\", \"cacheId\", \"precision\", \"tabable\", \"style\", \"onClick\", \"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onMouseDown\", \"onMouseUp\", \"onFocus\", \"onBlur\"];\n      var restProps = Object.keys(this.props).filter(function (key) {\n        return excludeProps.indexOf(key) === -1;\n      }).reduce(function (obj, key) {\n        obj[key] = _this2.props[key];\n        return obj;\n      }, {});\n      return _react2.default.createElement(\"path\", _extends({\n        d: pathString,\n        className: \"rsm-geography\" + (pressed ? \" rsm-geography--pressed\" : \"\") + (hover ? \" rsm-geography--hover\" : \"\"),\n        style: style[pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onClick: this.handleMouseClick,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseMove: this.handleMouseMove,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, restProps));\n    }\n  }]);\n\n  return Geography;\n}(_react.Component);\n\nGeography.defaultProps = {\n  precision: 0.1,\n  cacheId: null,\n  round: false,\n  tabable: true,\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  }\n};\nexports.default = Geography;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Marker = function (_Component) {\n  _inherits(Marker, _Component);\n\n  function Marker() {\n    _classCallCheck(this, Marker);\n\n    var _this = _possibleConstructorReturn(this, (Marker.__proto__ || Object.getPrototypeOf(Marker)).call(this));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Marker, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          marker = _props.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          marker = _props2.marker;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(marker, evt);\n        });\n      } else if (onMouseMove) onMouseMove(marker, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          marker = _props3.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          marker = _props4.marker;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          marker = _props5.marker;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          marker = _props6.marker,\n          projection = _props6.projection;\n      return onClick && onClick(marker, projection(marker.coordinates), evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          marker = _props7.marker;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(marker, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          marker = _props8.marker;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(marker, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          projection = _props9.projection,\n          marker = _props9.marker,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          children = _props9.children,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n      var translation = projection(marker.coordinates);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), marker.coordinates]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-marker\" + (pressed ? \" rsm-marker--pressed\" : \"\") + (hover ? \" rsm-marker--hover\" : \"\"),\n        transform: \"translate(\\n           \" + translation[0] + \"\\n           \" + translation[1] + \"\\n         ) \" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1\n      }, children);\n    }\n  }]);\n\n  return Marker;\n}(_react.Component);\n\nMarker.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  marker: {\n    coordinates: [0, 0]\n  },\n  tabable: true,\n  preserveMarkerAspect: true\n};\nexports.default = Marker;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Markers = function Markers(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nMarkers.defaultProps = {\n  componentIdentifier: \"Markers\",\n  groupName: \"markers\",\n  itemName: \"marker\"\n};\nexports.default = Markers;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Line = function (_Component) {\n  _inherits(Line, _Component);\n\n  function Line(props) {\n    _classCallCheck(this, Line);\n\n    var _this = _possibleConstructorReturn(this, (Line.__proto__ || Object.getPrototypeOf(Line)).call(this, props));\n\n    _this.state = {\n      hover: false,\n      pressed: false\n    };\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleMouseUp = _this.handleMouseUp.bind(_this);\n    _this.handleMouseClick = _this.handleMouseClick.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.handleBlur = _this.handleBlur.bind(_this);\n    return _this;\n  }\n\n  _createClass(Line, [{\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(evt) {\n      evt.persist();\n      var _props = this.props,\n          onMouseEnter = _props.onMouseEnter,\n          line = _props.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onMouseEnter && onMouseEnter(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(evt) {\n      evt.persist();\n      if (this.state.pressed) return;\n      var _props2 = this.props,\n          onMouseMove = _props2.onMouseMove,\n          line = _props2.line;\n\n      if (!this.state.hover) {\n        this.setState({\n          hover: true\n        }, function () {\n          return onMouseMove && onMouseMove(line, evt);\n        });\n      } else if (onMouseMove) onMouseMove(line, evt);else return;\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(evt) {\n      evt.persist();\n      var _props3 = this.props,\n          onMouseLeave = _props3.onMouseLeave,\n          line = _props3.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onMouseLeave && onMouseLeave(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(evt) {\n      evt.persist();\n      var _props4 = this.props,\n          onMouseDown = _props4.onMouseDown,\n          line = _props4.line;\n      this.setState({\n        pressed: true\n      }, function () {\n        return onMouseDown && onMouseDown(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseUp\",\n    value: function handleMouseUp(evt) {\n      evt.persist();\n      var _props5 = this.props,\n          onMouseUp = _props5.onMouseUp,\n          line = _props5.line;\n      this.setState({\n        pressed: false\n      }, function () {\n        return onMouseUp && onMouseUp(line, evt);\n      });\n    }\n  }, {\n    key: \"handleMouseClick\",\n    value: function handleMouseClick(evt) {\n      if (!this.props.onClick) return;\n      evt.persist();\n      var _props6 = this.props,\n          onClick = _props6.onClick,\n          line = _props6.line,\n          projection = _props6.projection;\n      return onClick && onClick(line, [projection(line.coordinates.start), projection(line.coordinates.end)], evt);\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(evt) {\n      evt.persist();\n      var _props7 = this.props,\n          onFocus = _props7.onFocus,\n          line = _props7.line;\n      this.setState({\n        hover: true\n      }, function () {\n        return onFocus && onFocus(line, evt);\n      });\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(evt) {\n      evt.persist();\n      var _props8 = this.props,\n          onBlur = _props8.onBlur,\n          line = _props8.line;\n      this.setState({\n        hover: false\n      }, function () {\n        return onBlur && onBlur(line, evt);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props9 = this.props,\n          className = _props9.className,\n          projection = _props9.projection,\n          line = _props9.line,\n          style = _props9.style,\n          tabable = _props9.tabable,\n          zoom = _props9.zoom,\n          preserveMarkerAspect = _props9.preserveMarkerAspect,\n          width = _props9.width,\n          height = _props9.height,\n          buildPath = _props9.buildPath,\n          strokeWidth = _props9.strokeWidth;\n      var _state = this.state,\n          pressed = _state.pressed,\n          hover = _state.hover;\n      var scale = preserveMarkerAspect ? \" scale(\" + 1 / zoom + \")\" : \"\";\n\n      var buildLineString = function buildLineString(coordinates) {\n        return {\n          type: \"Feature\",\n          geometry: {\n            type: \"LineString\",\n            coordinates: [projection.invert([width / 2, height / 2]), coordinates]\n          }\n        };\n      };\n\n      var startLineString = buildLineString(line.coordinates.start);\n      var endLineString = buildLineString(line.coordinates.end);\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && ((0, _d3Geo.geoLength)(startLineString) > radians || (0, _d3Geo.geoLength)(endLineString) > radians);\n      var start = projection(line.coordinates.start);\n      var end = projection(line.coordinates.end);\n      var path = buildPath ? buildPath(start, end, line) : \"M \" + start.join(\" \") + \" L \" + end.join(\" \");\n      return _react2.default.createElement(\"path\", {\n        className: \"rsm-line\" + (pressed ? \" rsm-line--pressed\" : \"\") + (hover ? \" rsm-line--hover\" : \"\") + \" \" + className,\n        transform: \"\" + scale,\n        style: style[isHidden ? \"hidden\" : pressed || hover ? pressed ? \"pressed\" : \"hover\" : \"default\"],\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onMouseDown: this.handleMouseDown,\n        onMouseUp: this.handleMouseUp,\n        onClick: this.handleMouseClick,\n        onMouseMove: this.handleMouseMove,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        tabIndex: tabable ? 0 : -1,\n        d: path,\n        strokeWidth: strokeWidth\n      });\n    }\n  }]);\n\n  return Line;\n}(_react.Component);\n\nLine.defaultProps = {\n  style: {\n    default: {},\n    hover: {},\n    pressed: {}\n  },\n  line: {\n    coordinates: {\n      start: [0, 0],\n      end: [-99.1, 19.4]\n    }\n  },\n  tabable: true,\n  preserveMarkerAspect: true,\n  strokeWidth: 1,\n  className: \"\"\n};\nexports.default = Line;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Lines = function Lines(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nLines.defaultProps = {\n  componentIdentifier: \"Lines\",\n  groupName: \"lines\",\n  itemName: \"line\"\n};\nexports.default = Lines;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Annotation = function (_Component) {\n  _inherits(Annotation, _Component);\n\n  function Annotation() {\n    _classCallCheck(this, Annotation);\n\n    return _possibleConstructorReturn(this, (Annotation.__proto__ || Object.getPrototypeOf(Annotation)).apply(this, arguments));\n  }\n\n  _createClass(Annotation, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          projection = _props.projection,\n          subject = _props.subject,\n          style = _props.style,\n          hiddenStyle = _props.hiddenStyle,\n          dx = _props.dx,\n          dy = _props.dy,\n          zoom = _props.zoom,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          children = _props.children,\n          curve = _props.curve,\n          markerEnd = _props.markerEnd,\n          width = _props.width,\n          height = _props.height;\n      var connectorPath = (0, _utils.createConnectorPath)(null, [-dx / zoom, -dy / zoom], curve);\n      var translation = projection(subject);\n      var lineString = {\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"LineString\",\n          \"coordinates\": [projection.invert([width / 2, height / 2]), subject]\n        }\n      };\n      var radians = Math.PI / 2,\n          degrees = 90;\n      var isGlobe = projection.clipAngle && projection.clipAngle() === degrees;\n      var isHidden = isGlobe && (0, _d3Geo.geoLength)(lineString) > radians;\n      return _react2.default.createElement(\"g\", {\n        className: \"rsm-annotation\",\n        style: isHidden ? _extends({}, style, hiddenStyle) : style,\n        transform: \"translate(\\n          \" + (translation[0] + dx / zoom) + \"\\n          \" + (translation[1] + dy / zoom) + \"\\n        )\",\n        textAnchor: (0, _utils.createTextAnchor)(dx)\n      }, children, _react2.default.createElement(\"path\", {\n        d: connectorPath,\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        fill: \"none\",\n        markerEnd: markerEnd\n      }));\n    }\n  }]);\n\n  return Annotation;\n}(_react.Component);\n\nAnnotation.defaultProps = {\n  curve: 0,\n  markerEnd: \"none\",\n  componentIdentifier: \"Annotation\",\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  zoom: 1\n};\nexports.default = Annotation;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MapGroup = require(\"./MapGroup\");\n\nvar _MapGroup2 = _interopRequireDefault(_MapGroup);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar Annotations = function Annotations(_ref) {\n  var groupName = _ref.groupName,\n      itemName = _ref.itemName,\n      componentIdentifier = _ref.componentIdentifier,\n      restProps = _objectWithoutProperties(_ref, [\"groupName\", \"itemName\", \"componentIdentifier\"]);\n\n  return _react2.default.createElement(_MapGroup2.default, _extends({\n    groupName: groupName,\n    itemName: itemName\n  }, restProps));\n};\n\nAnnotations.defaultProps = {\n  componentIdentifier: \"Annotations\",\n  groupName: \"annotations\",\n  itemName: \"annotation\"\n};\nexports.default = Annotations;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Geo = require(\"d3-geo\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar computeGraticule = function computeGraticule(projection, step) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().step(step)());\n};\n\nvar computeOutline = function computeOutline(projection) {\n  return (0, _d3Geo.geoPath)().projection(projection)((0, _d3Geo.geoGraticule)().outline());\n};\n\nvar Graticule = function (_Component) {\n  _inherits(Graticule, _Component);\n\n  function Graticule() {\n    _classCallCheck(this, Graticule);\n\n    var _this = _possibleConstructorReturn(this, (Graticule.__proto__ || Object.getPrototypeOf(Graticule)).call(this));\n\n    _this.state = {\n      renderGraticule: false,\n      graticulePath: \"\",\n      outlinePath: \"\"\n    };\n    _this.renderGraticule = _this.renderGraticule.bind(_this);\n    return _this;\n  }\n\n  _createClass(Graticule, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderGraticule();\n    }\n  }, {\n    key: \"renderGraticule\",\n    value: function renderGraticule() {\n      var _props = this.props,\n          step = _props.step,\n          projection = _props.projection,\n          round = _props.round,\n          precision = _props.precision;\n      this.setState({\n        renderGraticule: true,\n        graticulePath: round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n        outlinePath: round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _props2 = this.props,\n          step = _props2.step,\n          projection = _props2.projection,\n          round = _props2.round,\n          precision = _props2.precision,\n          globe = _props2.globe;\n\n      if (nextProps.round !== round || nextProps.precision !== precision || globe) {\n        this.setState({\n          graticulePath: nextProps.round ? (0, _utils.roundPath)(computeGraticule(projection, step), precision) : computeGraticule(projection, step),\n          outlinePath: nextProps.round ? (0, _utils.roundPath)(computeOutline(projection), precision) : computeOutline(projection)\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.disableOptimization;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props3 = this.props,\n          zoom = _props3.zoom,\n          style = _props3.style,\n          outline = _props3.outline,\n          fill = _props3.fill,\n          stroke = _props3.stroke;\n      return this.state.renderGraticule && _react2.default.createElement(\"g\", {\n        className: \"rsm-graticule\"\n      }, _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.graticulePath,\n        style: style\n      }), outline && _react2.default.createElement(\"path\", {\n        fill: fill,\n        stroke: stroke,\n        d: this.state.outlinePath,\n        style: style\n      }));\n    }\n  }]);\n\n  return Graticule;\n}(_react.Component);\n\nGraticule.defaultProps = {\n  componentIdentifier: \"Graticule\",\n  disableOptimization: true,\n  globe: false,\n  round: true,\n  precision: 0.1,\n  step: [10, 10],\n  outline: true,\n  stroke: \"#DDDDDD\",\n  fill: \"transparent\",\n  style: {\n    pointerEvents: \"none\"\n  }\n};\nexports.default = Graticule;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sin = Math.sin;\nexport var tan = Math.tan;\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan } from \"./math\";\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50,\n        delta;\n    if (!r) return [0, 0];\n\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = tan(z_2),\n          lnsecz_2 = log(1 / cosz_2);\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2));\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function (_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p.scale(179.976).clipAngle(147);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, pi, sin, sinci, sqrt } from \"./math\";\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y),\n      sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n} // Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\n\naitoffRaw.invert = function (x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x,\n      y1 = y,\n      i = 25;\n\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n\n  return [x1, y1];\n};\n\nexport default function () {\n  return projection(aitoffRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, atan2, cos, degrees, epsilon, radians, sin, tan } from \"./math\";\nexport function armadilloRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      k = (1 + sinPhi0 - cosPhi0) / 2;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        cosLambda = cos(lambda /= 2);\n    return [(1 + cosPhi) * sin(lambda), (sPhi0 * phi > -atan2(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + sin(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.\n    ];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = 0,\n        phi = 0,\n        i = 50;\n\n    do {\n      var cosLambda = cos(lambda),\n          sinLambda = sin(lambda),\n          cosPhi = cos(phi),\n          sinPhi = sin(phi),\n          A = 1 + cosPhi,\n          fx = A * sinLambda - x,\n          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,\n          dxdLambda = A * cosLambda / 2,\n          dxdPhi = -sinLambda * sinPhi,\n          dydLambda = sinPhi0 * A * sinLambda / 2,\n          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,\n          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,\n          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,\n          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;\n      lambda -= dLambda, phi -= dPhi;\n    } while ((abs(dLambda) > epsilon || abs(dPhi) > epsilon) && --i > 0);\n\n    return sPhi0 * phi > -atan2(cos(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;\n  };\n\n  return forward;\n}\nexport default function () {\n  var phi0 = 20 * radians,\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      m = projectionMutator(armadilloRaw),\n      p = m(phi0),\n      stream_ = p.stream;\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    tanPhi0 = tan((sPhi0 = (phi0 = _ * radians) >= 0 ? 1 : -1) * phi0);\n    return m(phi0);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90) {\n        sphereStream.point(lambda, sPhi0 * 90);\n      }\n\n      while (sPhi0 * (lambda -= phi0) >= -180) {\n        // TODO precision?\n        sphereStream.point(lambda, sPhi0 * -atan2(cos(lambda * radians / 2), tanPhi0) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(218.695).center([0, 28.0974]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan } from \"./math\";\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [4 / 3 * x * (3 + x2 - 3 * y2), 4 / 3 * y * (3 + 3 * x2 - y2)];\n}\n\naugustRaw.invert = function (x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d), sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)];\n};\n\nexport default function () {\n  return projection(augustRaw).scale(66.1603);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan } from \"./math\";\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi ? [lambda, log(tan(quarterPi + phi / 2))] : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function (x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi,\n      i = 25,\n      delta,\n      y0;\n\n  do {\n    var cosPhi_2 = cos(phi / 2),\n        tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function () {\n  return projection(bakerRaw).scale(112.314);\n}","import { geoProjectionMutator as projectionMutator, geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { abs, acos, asin, atan, atan2, cos, degrees, halfPi, pi, radians, round, sin, sqrt, tan } from \"./math\";\nexport function berghausRaw(lobes) {\n  var k = 2 * pi / lobes;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi);\n\n    if (abs(lambda) > halfPi) {\n      // back hemisphere\n      var theta = atan2(p[1], p[0]),\n          r = sqrt(p[0] * p[0] + p[1] * p[1]),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          α = atan2(sin(theta -= theta0), 2 - cos(theta)); // angle relative to lobe end\n\n      theta = theta0 + asin(pi / r * sin(α)) - α;\n      p[0] = r * cos(theta);\n      p[1] = r * sin(theta);\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r = sqrt(x * x + y * y);\n\n    if (r > halfPi) {\n      var theta = atan2(y, x),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          s = theta > theta0 ? -1 : 1,\n          A = r * cos(theta0 - theta),\n          cotα = 1 / tan(s * acos((A - pi) / sqrt(pi * (pi - 2 * A) + r * r)));\n      theta = theta0 + 2 * atan((cotα + s * sqrt(cotα * cotα - 3)) / 3);\n      x = r * cos(theta), y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\nexport default function () {\n  var lobes = 5,\n      m = projectionMutator(berghausRaw),\n      p = m(lobes),\n      projectionStream = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.lobes = function (_) {\n    return arguments.length ? m(lobes = +_) : lobes;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = projectionStream(stream),\n        sphereStream = (p.rotate([0, 0]), projectionStream(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 360 / lobes, delta0 = 2 * pi / lobes, phi = 90 - 180 / lobes, phi0 = halfPi; i < lobes; ++i, phi -= delta, phi0 -= delta0) {\n        sphereStream.point(atan2(sr * cos(phi0), cr) * degrees, asin(sr * sin(phi0)) * degrees);\n\n        if (phi < -90) {\n          sphereStream.point(-90, -180 - phi - epsilon);\n          sphereStream.point(-90, -180 - phi + epsilon);\n        } else {\n          sphereStream.point(90, phi + epsilon);\n          sphereStream.point(90, phi - epsilon);\n        }\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(87.8076).center([0, 17.1875]).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2 } from \"./math\";\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi),\n      i = 30,\n      delta;\n\n  do {\n    phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return phi / 2;\n}\nexport function mollweideBromleyRaw(cx, cy, cp) {\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\nexport default function () {\n  return projection(mollweideRaw).scale(169.529);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideBromleyTheta } from \"./mollweide\";\nimport { abs, cos, epsilon, pi, quarterPi, sin, sqrt2 } from \"./math\";\nvar k = 2.00276,\n    w = 1.11072;\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function (x, y) {\n  var ky = k * y,\n      theta = y < 0 ? -quarterPi : quarterPi,\n      i = 25,\n      delta,\n      phi;\n\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function () {\n  return projection(boggsRaw).scale(160.857);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { degrees, radians } from \"./math\";\nexport default function (projectAt) {\n  var phi0 = 0,\n      m = projectionMutator(projectAt),\n      p = m(phi0);\n\n  p.parallel = function (_) {\n    return arguments.length ? m(phi0 = _ * radians) : phi0 * degrees;\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos } from \"./math\";\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function (x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function () {\n  return projection(sinusoidalRaw).scale(152.63);\n}","import parallel1 from \"./parallel1\";\nimport { atan2, cos, sin, sqrt, tan } from \"./math\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport function bonneRaw(phi0) {\n  if (!phi0) return sinusoidalRaw;\n  var cotPhi0 = 1 / tan(phi0);\n\n  function forward(lambda, phi) {\n    var rho = cotPhi0 + phi0 - phi,\n        e = rho ? lambda * cos(phi) / rho : rho;\n    return [rho * sin(e), cotPhi0 - rho * cos(e)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + (y = cotPhi0 - y) * y),\n        phi = cotPhi0 + phi0 - rho;\n    return [rho / cos(phi) * atan2(x, y), phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(bonneRaw).scale(123.082).center([0, 26.1441]).parallel(45);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { atan2, cos, halfPi, sin, sqrt } from \"./math\";\nexport function bottomleyRaw(sinPsi) {\n  function forward(lambda, phi) {\n    var rho = halfPi - phi,\n        eta = rho ? lambda * sinPsi * sin(rho) / rho : rho;\n    return [rho * sin(eta) / sinPsi, halfPi - rho * cos(eta)];\n  }\n\n  forward.invert = function (x, y) {\n    var x1 = x * sinPsi,\n        y1 = halfPi - y,\n        rho = sqrt(x1 * x1 + y1 * y1),\n        eta = atan2(x1, y1);\n    return [(rho ? rho / sin(rho) : 1) * eta / sinPsi, halfPi - rho];\n  };\n\n  return forward;\n}\nexport default function () {\n  var sinPsi = 0.5,\n      m = projectionMutator(bottomleyRaw),\n      p = m(sinPsi);\n\n  p.fraction = function (_) {\n    return arguments.length ? m(sinPsi = +_) : sinPsi;\n  };\n\n  return p.scale(158.837);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\nexport default function () {\n  return projection(bromleyRaw).scale(152.63);\n}","import { geoCentroid as centroid, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon, floor, pi, radians, sin, sqrt } from \"./math\"; // Azimuthal distance.\n\nfunction distance(dPhi, c1, s1, c2, s2, dLambda) {\n  var cosdLambda = cos(dLambda),\n      r;\n\n  if (abs(dPhi) > 1 || abs(dLambda) > 1) {\n    r = acos(s1 * s2 + c1 * c2 * cosdLambda);\n  } else {\n    var sindPhi = sin(dPhi / 2),\n        sindLambda = sin(dLambda / 2);\n    r = 2 * asin(sqrt(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));\n  }\n\n  return abs(r) > epsilon ? [r, atan2(c2 * sin(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];\n} // Angle opposite a, and contained between sides of lengths b and c.\n\n\nfunction angle(b, c, a) {\n  return acos((b * b + c * c - a * a) / (2 * b * c));\n} // Normalize longitude.\n\n\nfunction longitude(lambda) {\n  return lambda - 2 * pi * floor((lambda + pi) / (2 * pi));\n}\n\nexport function chamberlinRaw(p0, p1, p2) {\n  var points = [[p0[0], p0[1], sin(p0[1]), cos(p0[1])], [p1[0], p1[1], sin(p1[1]), cos(p1[1])], [p2[0], p2[1], sin(p2[1]), cos(p2[1])]];\n\n  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\n    b = points[i];\n    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\n    a.point = [0, 0];\n  }\n\n  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),\n      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),\n      beta2 = pi - beta0;\n  points[2].point[1] = 0;\n  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);\n  var mean = [points[2].point[0] = points[0].point[0] + points[2].v[0] * cos(beta0), 2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * sin(beta0))];\n\n  function forward(lambda, phi) {\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        v = new Array(3),\n        i; // Compute distance and azimuth from control points.\n\n    for (i = 0; i < 3; ++i) {\n      var p = points[i];\n      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);\n      if (!v[i][0]) return p.point;\n      v[i][1] = longitude(v[i][1] - p.v[1]);\n    } // Arithmetic mean of interception points.\n\n\n    var point = mean.slice();\n\n    for (i = 0; i < 3; ++i) {\n      var j = i == 2 ? 0 : i + 1;\n      var a = angle(points[i].v[0], v[i][0], v[j][0]);\n      if (v[i][1] < 0) a = -a;\n\n      if (!i) {\n        point[0] += v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else if (i == 1) {\n        a = beta1 - a;\n        point[0] -= v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else {\n        a = beta2 - a;\n        point[0] += v[i][0] * cos(a);\n        point[1] += v[i][0] * sin(a);\n      }\n    }\n\n    point[0] /= 3, point[1] /= 3;\n    return point;\n  }\n\n  return forward;\n}\n\nfunction pointRadians(p) {\n  return p[0] *= radians, p[1] *= radians, p;\n}\n\nexport function chamberlinAfrica() {\n  return chamberlin([0, 22], [45, 22], [22.5, -22]).scale(380).center([22.5, 2]);\n}\nexport default function chamberlin(p0, p1, p2) {\n  // TODO order matters!\n  var c = centroid({\n    type: \"MultiPoint\",\n    coordinates: [p0, p1, p2]\n  }),\n      R = [-c[0], -c[1]],\n      r = rotation(R),\n      p = projection(chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)))).rotate(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, pi, sin, sqrt, sqrtPi } from \"./math\";\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [2 / sqrtPi * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function (x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function () {\n  return projection(collignonRaw).scale(95.6464).center([0, 30]);\n}","import { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function (x, y) {\n    if (x) y *= sin(x) / x;\n    var cosλ = cos(x);\n    return [x, 2 * atan2(sqrt(cosλ * cosλ + tanPhi0 * tanPhi0 - y * y) - cosλ, tanPhi0 - y)];\n  } : function (x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n  return forward;\n}\nexport default function () {\n  return parallel1(craigRaw).scale(249.828).clipAngle(90);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt, sqrtPi } from \"./math\";\nvar sqrt3 = sqrt(3);\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function (x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function () {\n  return projection(crasterRaw).scale(156.19);\n}","import { asin, cos, sin } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalEqualAreaRaw).parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n  .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}","import { atan, cos, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function (x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(cylindricalStereographicRaw).scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, pi, sqrt } from \"./math\";\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [alpha * lambda * (1 - abs(phi) / pi), alpha * phi];\n}\n\neckert1Raw.invert = function (x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [x / (alpha * (1 - abs(phi) / pi)), phi];\n};\n\nexport default function () {\n  return projection(eckert1Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, pi, sign, sin, sqrt } from \"./math\";\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [2 / sqrt(6 * pi) * lambda * alpha, sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)];\n}\n\neckert2Raw.invert = function (x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [x * sqrt(6 * pi) / (2 * alpha), sign(y) * asin((4 - alpha * alpha) / 3)];\n};\n\nexport default function () {\n  return projection(eckert2Raw).scale(165.664);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))), 4 / k * phi];\n}\n\neckert3Raw.invert = function (x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))), y * k / 2];\n};\n\nexport default function () {\n  return projection(eckert3Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n\n  return [2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)), 2 * sqrt(pi / (4 + pi)) * sin(phi)];\n}\n\neckert4Raw.invert = function (x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [x / (2 / sqrt(pi * (4 + pi)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfPi))];\n};\n\nexport default function () {\n  return projection(eckert4Raw).scale(180.739);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { cos, pi, sqrt } from \"./math\";\nexport function eckert5Raw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / sqrt(2 + pi), 2 * phi / sqrt(2 + pi)];\n}\n\neckert5Raw.invert = function (x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [k * x / (1 + cos(phi)), phi];\n};\n\nexport default function () {\n  return projection(eckert5Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n\n  k = sqrt(2 + pi);\n  return [lambda * (1 + cos(phi)) / k, 2 * phi / k];\n}\n\neckert6Raw.invert = function (x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [x * 2 * k / (1 + cos(y *= k)), asin((y + sin(y)) / j)];\n};\n\nexport default function () {\n  return projection(eckert6Raw).scale(173.044);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { augustRaw } from \"./august\";\nimport { abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nvar eisenlohrK = 3 + 2 * sqrt2;\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [eisenlohrK * (c * (v - 1 / v) - 2 * log(v)), eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))];\n}\n\neisenlohrRaw.invert = function (x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0],\n      phi = p[1],\n      i = 20,\n      p;\n  x /= eisenlohrK, y /= eisenlohrK;\n\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = sqrt2 * c1 + (c0 + s0) * k,\n        v1 = sqrt2 * c1 + (c0 - s0) * k,\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(eisenlohrRaw).scale(62.5271);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, radians, sqrt, tan } from \"./math\";\nvar faheyK = cos(35 * radians);\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function (x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(faheyRaw).scale(137.152);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, cos, sqrtPi, tan } from \"./math\";\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2,\n      cosk = cos(k);\n  return [2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function (x, y) {\n  var k = atan(y / sqrtPi),\n      cosk = cos(k),\n      phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function () {\n  return projection(foucautRaw).scale(135.264);\n}","import { geoEquirectangular, geoOrthographic } from \"d3-geo\";\nimport { asin, atan, degrees, radians, sin, tan } from \"./math\";\n\nfunction gilbertForward(point) {\n  return [point[0] / 2, asin(tan(point[1] / 2 * radians)) * degrees];\n}\n\nfunction gilbertInvert(point) {\n  return [point[0] * 2, 2 * atan(sin(point[1] * radians)) * degrees];\n}\n\nexport default function (projectionType) {\n  if (projectionType == null) projectionType = geoOrthographic;\n  var projection = projectionType(),\n      equirectangular = geoEquirectangular().scale(degrees).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting\n\n  function gilbert(point) {\n    return projection(gilbertForward(point));\n  }\n\n  if (projection.invert) gilbert.invert = function (point) {\n    return gilbertInvert(projection.invert(point));\n  };\n\n  gilbert.stream = function (stream) {\n    var s1 = projection.stream(stream),\n        s0 = equirectangular.stream({\n      point: function point(lambda, phi) {\n        s1.point(lambda / 2, asin(tan(-phi / 2 * radians)) * degrees);\n      },\n      lineStart: function lineStart() {\n        s1.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        s1.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        s1.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        s1.polygonEnd();\n      }\n    });\n    s0.sphere = s1.sphere;\n    return s0;\n  };\n\n  function property(name) {\n    gilbert[name] = function (_) {\n      return arguments.length ? (projection[name](_), gilbert) : projection[name]();\n    };\n  }\n\n  gilbert.rotate = function (_) {\n    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();\n  };\n\n  gilbert.center = function (_) {\n    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());\n  };\n\n  property(\"clipAngle\");\n  property(\"clipExtent\");\n  property(\"scale\");\n  property(\"translate\");\n  property(\"precision\");\n  return gilbert.scale(249.5);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt } from \"./math\";\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      x = r;\n      var i = 50,\n          delta;\n\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n\n    return p;\n  }\n\n  forward.invert = function (x, y) {\n    var r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n        if (abs(delta) < epsilon2 || ! --i) break;\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (sinx - x_halfPi * 2 * (halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) - rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function (x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n} // Numerical integration: trapezoidal rule.\n\n\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n\n  for (var i = 1, x = a; i < n; ++i) {\n    s += 2 * f(x += h);\n  }\n\n  return s * 0.5 * h;\n}\n\nexport default function () {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function (_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function (_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return p.rotate([90, -40]).scale(91.7095).clipAngle(180 - 1e-3);\n}","import { abs, asin, cos, epsilon, pi, sin, sqrt } from \"./math\";\nexport default function (a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda,\n        deltaPhi,\n        i = 50;\n\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = lambda / pi * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n    return [lambda, phi];\n  };\n\n  return forward;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\nexport default function () {\n  return projection(ginzburg4Raw).scale(149.995);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435, 0.082742);\nexport default function () {\n  return projection(ginzburg5Raw).scale(153.93);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nimport { pi } from \"./math\";\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\nexport default function () {\n  return projection(ginzburg6Raw).scale(130.945);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2), phi * (1 + phi2 / 12)];\n}\n\nginzburg8Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50,\n      delta;\n\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  i = 50;\n  x /= 1 - 0.162388 * phi2;\n\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(ginzburg8Raw).scale(131.747);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965, 0.031762);\nexport default function () {\n  return projection(ginzburg9Raw).scale(131.087);\n}","import { halfPi, pi } from \"./math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectSquare(lambda, phi) {\n    var s = lambda > 0 ? -0.5 : 0.5,\n        point = project(lambda + s * pi, phi);\n    point[0] -= s * dx;\n    return point;\n  }\n\n  if (project.invert) projectSquare.invert = function (x, y) {\n    var s = x > 0 ? -0.5 : 0.5,\n        location = project.invert(x + s * dx, y),\n        lambda = location[0] - s * pi;\n    if (lambda < -pi) lambda += 2 * pi;else if (lambda > pi) lambda -= 2 * pi;\n    location[0] = lambda;\n    return location;\n  };\n  return projectSquare;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nimport squareRaw from \"./square\";\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return point[0] *= sLambda, point[1] *= -sPhi, point;\n}\n\ngringortenRaw.invert = function (x, y) {\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n  if (lambda === 0) return [0, -(h + r * a)];\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta; // Slower but accurate bisection method.\n\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x,\n        x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n\n    do {\n      var g = sqrt(a2 - x * x),\n          f = x * (zeta + mu * g) + nu * asin(x / a) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  } // Newton-Raphson.\n  else {\n      x = epsilon, i = 25;\n\n      do {\n        var x2 = x * x,\n            g2 = sqrt(a2 - x2),\n            zetaMug = zeta + mu * g2,\n            f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n            df = zetaMug + (nu - mu * x2) / g2;\n        x -= delta = g2 ? f2 / df : 0;\n      } while (abs(delta) > epsilon && --i > 0);\n    }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = 1 - r2 + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function () {\n  return projection(squareRaw(gringortenRaw)).scale(239.75);\n}","import { abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh } from \"./math\"; // Returns [sn, cn, dn](u + iv|m).\n\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [[0, b[0] / b[1]], [1 / b[1], 0], [b[2] / b[1], 0]];\n  }\n\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [[a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c], [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c], [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]];\n} // Returns [sn, cn, dn, ph](u|m).\n\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [t - ai * b, b + ai * t, 1 - m * t * t / 2, u - ai];\n  }\n\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [t + ai * (twon - u) / (b * b), phi - ai * t * phi * (twon - u), phi + ai * t * phi * (twon + u), 2 * atan(exp(u)) - halfPi + ai * (twon - u) / b];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n} // Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\n\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi), ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)];\n  }\n\n  return [0, ellipticF(atan(sinhPsi), 1 - m) * sign(psi)];\n} // Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\n\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n\n  return phi / (pow(2, i) * a);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { ellipticF, ellipticFi, ellipticJi } from \"./elliptic\";\nimport { abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan } from \"./math\";\nimport squareRaw from \"./square\";\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)), -0.25 * log(t * t + 4 * x2) + 0.5 * log(y_1 * y_1 + x2)];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\n\nguyouRaw.invert = function (x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [lambda, 2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi];\n};\n\nexport default function () {\n  return projection(squareRaw(guyouRaw)).scale(151.496);\n}","import { geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { asin, cos, sin } from \"./math\";\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [lambda * cos(phi) / cos(phi /= 2), 2 * sin(phi)];\n}\n\nhammerQuarticAuthalicRaw.invert = function (x, y) {\n  var phi = 2 * asin(y / 2);\n  return [x * cos(phi / 2) / cos(phi), phi];\n};\n\nexport default function () {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function (_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p.scale(169.529);\n}","import { geoProjectionMutator as projectionMutator, geoCircle } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin } from \"./math\";\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [K * cosPhi0 * sin(lambda), (abs(lambda) > halfPi ? K : -K) * ( // rotate for back hemisphere\n    sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n} // Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\n\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n  return function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [atan2(y, x * cosPhi0 - z * sinPhi0), asin(z * cosPhi0 + x * sinPhi0)];\n  };\n}\n\nexport default function () {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function (_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  }; // Temporary hack; see hammerRetroazimuthalRotation.\n\n\n  p.rotate = function (_) {\n    if (!arguments.length) return _ = rotate_.call(p), _[1] += phi0 * degrees, _;\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function (stream) {\n    stream = stream_(stream);\n\n    stream.sphere = function () {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n\n      while (++i < n) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n\n      while (--i >= 0) {\n        stream.point((p = ring[i])[0], p[1]);\n      }\n\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n\n    return stream;\n  };\n\n  return p.scale(79.4187).parallel(45).clipAngle(180 - 1e-3);\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","import { range } from \"d3-array\";\nimport { geoStream, geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { collignonRaw } from \"./collignon\";\nimport { cylindricalEqualAreaRaw } from \"./cylindricalEqualArea\";\nimport { abs, floor, max, min, pi, radians, sqrtPi, tau } from \"./math\";\nvar healpixParallel = 41 + 48 / 36 + 37 / 3600,\n    // for K=3; TODO automate\nhealpixLambert = cylindricalEqualAreaRaw(0);\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + dy1 * dy1 * 4 / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function (x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphere(step) {\n  return {\n    type: \"Polygon\",\n    coordinates: [range(-180, 180 + step / 2, step).map(function (x, i) {\n      return [x, i & 1 ? 90 - 1e-6 : healpixParallel];\n    }).concat(range(180, -180 - step / 2, -step).map(function (x, i) {\n      return [x, i & 1 ? -90 + 1e-6 : -healpixParallel];\n    }))]\n  };\n}\n\nexport default function () {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function (_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere(180 / H), sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p.scale(239.75);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt } from \"./math\";\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n\n    if (t && t < 2) {\n      var theta = halfPi - phi,\n          i = 25,\n          delta;\n\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 - 0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n\n    return [rho * sin(omega), rho0 - rho * cos(omega)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [asin(x / sqrt(rho2)) * pi / Bt_Bt1, asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)];\n  };\n\n  return forward;\n}\nexport default function () {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function (_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p.scale(167.774).center([0, 18.67]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nexport var sinuMollweidePhi = 0.7109889596207567;\nexport var sinuMollweideY = 0.0528035274542;\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function (x, y) {\n  return y > -sinuMollweidePhi ? mollweideRaw.invert(x, y - sinuMollweideY) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(sinuMollweideRaw).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs } from \"./math\";\nimport { mollweideRaw } from \"./mollweide\";\nimport { sinusoidalRaw } from \"./sinusoidal\";\nimport { sinuMollweidePhi, sinuMollweideY } from \"./sinuMollweide\";\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda) : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function (x, y) {\n  return abs(y) > sinuMollweidePhi ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY)) : sinusoidalRaw.invert(x, y);\n};\n\nexport default function () {\n  return projection(homolosineRaw).scale(152.63);\n}","import { merge } from \"d3-array\";\nimport { geoStream, geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, radians } from \"../math\";\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction interpolateLine(coordinates, m) {\n  var i = -1,\n      n = coordinates.length,\n      p0 = coordinates[0],\n      p1,\n      dx,\n      dy,\n      resampled = [];\n\n  while (++i < n) {\n    p1 = coordinates[i];\n    dx = (p1[0] - p0[0]) / m;\n    dy = (p1[1] - p0[1]) / m;\n\n    for (var j = 0; j < m; ++j) {\n      resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n    }\n\n    p0 = p1;\n  }\n\n  resampled.push(p1);\n  return resampled;\n}\n\nfunction interpolateSphere(lobes) {\n  var coordinates = [],\n      lobe,\n      lambda0,\n      phi0,\n      phi1,\n      lambda2,\n      phi2,\n      i,\n      n = lobes[0].length; // Northern Hemisphere\n\n  for (i = 0; i < n; ++i) {\n    lobe = lobes[0][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda0 + epsilon, phi0 + epsilon], [lambda0 + epsilon, phi1 - epsilon], [lambda2 - epsilon, phi1 - epsilon], [lambda2 - epsilon, phi2 + epsilon]], 30));\n  } // Southern Hemisphere\n\n\n  for (i = lobes[1].length - 1; i >= 0; --i) {\n    lobe = lobes[1][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([[lambda2 - epsilon, phi2 - epsilon], [lambda2 - epsilon, phi1 + epsilon], [lambda0 + epsilon, phi1 + epsilon], [lambda0 + epsilon, phi0 - epsilon]], 30));\n  }\n\n  return {\n    type: \"Polygon\",\n    coordinates: [merge(coordinates)]\n  };\n}\n\nexport default function (project, lobes) {\n  var sphere = interpolateSphere(lobes);\n  lobes = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      return [[l[0][0] * radians, l[0][1] * radians], [l[1][0] * radians, l[1][1] * radians], [l[2][0] * radians, l[2][1] * radians]];\n    });\n  });\n  var bounds = lobes.map(function (lobe) {\n    return lobe.map(function (l) {\n      var x0 = project(l[0][0], l[0][1])[0],\n          x1 = project(l[2][0], l[2][1])[0],\n          y0 = project(l[1][0], l[0][1])[1],\n          y1 = project(l[1][0], l[1][1])[1],\n          t;\n      if (y0 > y1) t = y0, y0 = y1, y1 = t;\n      return [[x0, y0], [x1, y1]];\n    });\n  });\n\n  function forward(lambda, phi) {\n    var sign = phi < 0 ? -1 : +1,\n        lobe = lobes[+(phi < 0)];\n\n    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i) {\n      ;\n    }\n\n    var p = project(lambda - lobe[i][1][0], phi);\n    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];\n    return p;\n  } // Assumes mutually exclusive bounding boxes for lobes.\n\n\n  if (project.invert) forward.invert = function (x, y) {\n    var bound = bounds[+(y < 0)],\n        lobe = lobes[+(y < 0)];\n\n    for (var i = 0, n = bound.length; i < n; ++i) {\n      var b = bound[i];\n\n      if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n        var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);\n        p[0] += lobe[i][1][0];\n        return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;\n      }\n    }\n  };\n  var p = projection(forward),\n      stream_ = p.stream;\n\n  p.stream = function (stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      geoStream(sphere, sphereStream);\n    };\n\n    return rotateStream;\n  };\n\n  return p;\n}","import { boggsRaw } from \"../boggs\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(boggsRaw, lobes).scale(160.857);\n}","import { homolosineRaw } from \"../homolosine\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(homolosineRaw, lobes).scale(152.63);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-100, 90], [-40, 0]], [[-40, 0], [30, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-160, -90], [-100, 0]], [[-100, 0], [-60, -90], [-20, 0]], [[-20, 0], [20, -90], [80, 0]], [[80, 0], [140, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529);\n}","import { mollweideRaw } from \"../mollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-90, 90], [0, 0]], [[0, 0], [90, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-90, -90], [0, 0]], [[0, 0], [90, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(mollweideRaw, lobes).scale(169.529).rotate([20, 0]);\n}","import { sinuMollweideRaw } from \"../sinuMollweide\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 35], [-30, 90], [0, 35]], [[0, 35], [30, 90], [180, 35]]], [// southern hemisphere\n[[-180, -10], [-102, -90], [-65, -10]], [[-65, -10], [5, -90], [77, -10]], [[77, -10], [103, -90], [180, -10]]]];\nexport default function () {\n  return interrupt(sinuMollweideRaw, lobes).rotate([-20, -55]).scale(164.263).center([0, -5.4036]);\n}","import { sinusoidalRaw } from \"../sinusoidal\";\nimport interrupt from \"./index\";\nvar lobes = [[// northern hemisphere\n[[-180, 0], [-110, 90], [-40, 0]], [[-40, 0], [0, 90], [40, 0]], [[40, 0], [110, 90], [180, 0]]], [// southern hemisphere\n[[-180, 0], [-110, -90], [-40, 0]], [[-40, 0], [0, -90], [40, 0]], [[40, 0], [110, -90], [180, 0]]]];\nexport default function () {\n  return interrupt(sinusoidalRaw, lobes).scale(152.63).rotate([-20, 0]);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt, tau } from \"./math\";\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function (x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function () {\n  return projection(kavrayskiy7Raw).scale(158.837);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin } from \"./math\";\nexport function lagrangeRaw(n) {\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [2 * sin(lambda) / c, (v - 1 / v) / c];\n  }\n\n  forward.invert = function (x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [atan2(2 * x, 1 - x2 - y2) / n, asin((t - 1) / (t + 1))];\n  };\n\n  return forward;\n}\nexport default function () {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function (_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p.scale(124.75);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2 } from \"./math\";\nvar pi_sqrt2 = pi / sqrt2;\nexport function larriveeRaw(lambda, phi) {\n  return [lambda * (1 + sqrt(cos(phi))) / 2, phi / (cos(phi / 2) * cos(lambda / 6))];\n}\n\nlarriveeRaw.invert = function (x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;else lambda += 6 * acos(pi_sqrt2 / y0);\n\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = phi / cosPhi_2 * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function () {\n  return projection(larriveeRaw).scale(97.2672);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, pi, sign } from \"./math\";\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)), phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))];\n}\n\nlaskowskiRaw.invert = function (x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n\n  return i && [lambda, phi];\n};\n\nexport default function () {\n  return projection(laskowskiRaw).scale(139.98);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2 } from \"./math\";\nexport function littrowRaw(lambda, phi) {\n  return [sin(lambda) / cos(phi), tan(phi) * cos(lambda)];\n}\n\nlittrowRaw.invert = function (x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      cosPhi = x ? sqrt1_2 * sqrt((y2_1 - sqrt(x2 * x2 + 2 * x2 * (y2 - 1) + y2_1 * y2_1)) / x2 + 1) : 1 / sqrt(y2_1);\n  return [asin(x * cosPhi), sign(y) * acos(cosPhi)];\n};\n\nexport default function () {\n  return projection(littrowRaw).scale(144.049).clipAngle(90 - 1e-3);\n}","import parallel1 from \"./parallel1\";\nimport { abs, cos, epsilon, halfPi, log, quarterPi, tan } from \"./math\";\nexport function loximuthalRaw(phi0) {\n  var cosPhi0 = cos(phi0),\n      tanPhi0 = tan(quarterPi + phi0 / 2);\n\n  function forward(lambda, phi) {\n    var y = phi - phi0,\n        x = abs(y) < epsilon ? lambda * cosPhi0 : abs(x = quarterPi + phi / 2) < epsilon || abs(abs(x) - halfPi) < epsilon ? 0 : lambda * y / log(tan(x) / tanPhi0);\n    return [x, y];\n  }\n\n  forward.invert = function (x, y) {\n    var lambda,\n        phi = y + phi0;\n    return [abs(y) < epsilon ? x / cosPhi0 : abs(lambda = quarterPi + phi / 2) < epsilon || abs(abs(lambda) - halfPi) < epsilon ? 0 : x * log(tan(lambda) / tanPhi0) / y, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(loximuthalRaw).parallel(40).scale(158.837);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, exp, log, quarterPi, pi, tan } from \"./math\";\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function (x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function () {\n  return projection(millerRaw).scale(108.318);\n}","import { geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, epsilon, sin, sqrt } from \"./math\";\nexport function modifiedStereographicRaw(C) {\n  var m = C.length - 1;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = 2 / (1 + cosPhi * cos(lambda)),\n        zr = k * cosPhi * sin(lambda),\n        zi = k * sin(phi),\n        i = m,\n        w = C[i],\n        ar = w[0],\n        ai = w[1],\n        t;\n\n    while (--i >= 0) {\n      w = C[i];\n      ar = w[0] + zr * (t = ar) - zi * ai;\n      ai = w[1] + zr * ai + zi * t;\n    }\n\n    ar = zr * (t = ar) - zi * ai;\n    ai = zr * ai + zi * t;\n    return [ar, ai];\n  }\n\n  forward.invert = function (x, y) {\n    var i = 20,\n        zr = x,\n        zi = y;\n\n    do {\n      var j = m,\n          w = C[j],\n          ar = w[0],\n          ai = w[1],\n          br = 0,\n          bi = 0,\n          t;\n\n      while (--j >= 0) {\n        w = C[j];\n        br = ar + zr * (t = br) - zi * bi;\n        bi = ai + zr * bi + zi * t;\n        ar = w[0] + zr * (t = ar) - zi * ai;\n        ai = w[1] + zr * ai + zi * t;\n      }\n\n      br = ar + zr * (t = br) - zi * bi;\n      bi = ai + zr * bi + zi * t;\n      ar = zr * (t = ar) - zi * ai - x;\n      ai = zr * ai + zi * t - y;\n      var denominator = br * br + bi * bi,\n          deltar,\n          deltai;\n      zr -= deltar = (ar * br + ai * bi) / denominator;\n      zi -= deltai = (ai * br - ar * bi) / denominator;\n    } while (abs(deltar) + abs(deltai) > epsilon * epsilon && --i > 0);\n\n    if (i) {\n      var rho = sqrt(zr * zr + zi * zi),\n          c = 2 * atan(rho * 0.5),\n          sinc = sin(c);\n      return [atan2(zr * sinc, rho * cos(c)), rho ? asin(zi * sinc / rho) : 0];\n    }\n  };\n\n  return forward;\n}\nvar alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],\n    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],\n    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],\n    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],\n    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];\nexport function modifiedStereographicAlaska() {\n  return modifiedStereographic(alaska, [152, -64]).scale(1500).center([-160.908, 62.4864]).clipAngle(25);\n}\nexport function modifiedStereographicGs48() {\n  return modifiedStereographic(gs48, [95, -38]).scale(1000).clipAngle(55).center([-96.5563, 38.8675]);\n}\nexport function modifiedStereographicGs50() {\n  return modifiedStereographic(gs50, [120, -45]).scale(359.513).clipAngle(55).center([-117.474, 53.0628]);\n}\nexport function modifiedStereographicMiller() {\n  return modifiedStereographic(miller, [-20, -18]).scale(209.091).center([20, 16.7214]).clipAngle(82);\n}\nexport function modifiedStereographicLee() {\n  return modifiedStereographic(lee, [165, 10]).scale(250).clipAngle(130).center([-165, -10]);\n}\nexport default function modifiedStereographic(coefficients, rotate) {\n  var p = projection(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),\n      r = rotation(rotate),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, cos, sin, sqrt } from \"./math\";\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7, 9 * sin(theta / 3) / sqrt7];\n}\n\nmtFlatPolarParabolicRaw.invert = function (x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)), asin(sin(theta) * 3 * sqrt6 / 7)];\n};\n\nexport default function () {\n  return projection(mtFlatPolarParabolicRaw).scale(164.859);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2 } from \"./math\";\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2), 2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)];\n}\n\nmtFlatPolarQuarticRaw.invert = function (x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)), asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarQuarticRaw).scale(188.209);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, cos, epsilon, halfPi, pi, sin, sqrt } from \"./math\";\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n\n  return [A * (0.5 + cos(theta)) * lambda / 1.5, A * theta];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function (x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [1.5 * x / (A * (0.5 + cos(theta))), asin((theta / 2 + sin(theta)) / (1 + pi / 4))];\n};\n\nexport default function () {\n  return projection(mtFlatPolarSinusoidalRaw).scale(166.518);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\";\nexport function naturalEarthRaw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarthRaw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarthRaw).scale(175.295);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, epsilon, tan } from \"./math\";\nexport function nellHammerRaw(lambda, phi) {\n  return [lambda * (1 + cos(phi)) / 2, 2 * (phi - tan(phi / 2))];\n}\n\nnellHammerRaw.invert = function (x, y) {\n  var p = y / 2;\n\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n\n  return [2 * x / (1 + cos(y)), y];\n};\n\nexport default function () {\n  return projection(nellHammerRaw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon } from \"./math\"; // Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [lambda, phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))];\n}\n\npattersonRaw.invert = function (x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y,\n      delta;\n\n  do {\n    // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = (yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function () {\n  return projection(pattersonRaw).scale(139.319);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan } from \"./math\";\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [sin(k) / tanPhi, phi + (1 - cos(k)) / tanPhi];\n}\n\npolyconicRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10,\n      delta;\n\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n\n  tanPhi = tan(phi);\n  return [(abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi), phi];\n};\n\nexport default function () {\n  return projection(polyconicRaw).scale(103.74);\n}","import { atan2, cos, sin, sqrt } from \"../math\"; // Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n// Transform matrix for [a0, a1] -> [b0, b1].\n\nexport default function (a, b) {\n  var u = subtract(a[1], a[0]),\n      v = subtract(b[1], b[0]),\n      phi = angle(u, v),\n      s = length(u) / length(v);\n  return multiply([1, 0, a[0][0], 0, 1, a[0][1]], multiply([s, 0, 0, 0, s, 0], multiply([cos(phi), sin(phi), 0, -sin(phi), cos(phi), 0], [1, 0, -b[0][0], 0, 1, -b[0][1]])));\n} // Inverts a transform matrix.\n\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]), -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])];\n} // Multiplies two 3x2 matrices.\n\nexport function multiply(a, b) {\n  return [a[0] * b[0] + a[1] * b[3], a[0] * b[1] + a[1] * b[4], a[0] * b[2] + a[1] * b[5] + a[2], a[3] * b[0] + a[4] * b[3], a[3] * b[1] + a[4] * b[4], a[3] * b[2] + a[4] * b[5] + a[5]];\n} // Subtracts 2D vectors.\n\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n} // Magnitude of a 2D vector.\n\n\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n} // Angle between two 2D vectors.\n\n\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}","import { geoBounds as bounds, geoCentroid as centroid, geoInterpolate as interpolate, geoProjection as projection } from \"d3-geo\";\nimport { abs, cos, degrees, epsilon, pi, radians, sin } from \"../math\";\nimport { default as matrix, multiply, inverse } from \"./matrix\"; // Creates a polyhedral projection.\n//  * root: a spanning tree of polygon faces.  Nodes are automatically\n//    augmented with a transform matrix.\n//  * face: a function that returns the appropriate node for a given {lambda, phi}\n//    point (radians).\n//  * r: rotation angle for final polyhedral net.  Defaults to -pi / 6 (for\n//    butterflies).\n\nexport default function (root, face, r) {\n  r = r == null ? -pi / 6 : r; // TODO automate\n\n  recurse(root, {\n    transform: [cos(r), sin(r), 0, -sin(r), cos(r), 0]\n  });\n\n  function recurse(node, parent) {\n    node.edges = faceEdges(node.face); // Find shared edge.\n\n    if (parent.face) {\n      var shared = node.shared = sharedEdge(node.face, parent.face),\n          m = matrix(shared.map(parent.project), shared.map(node.project));\n      node.transform = parent.transform ? multiply(parent.transform, m) : m; // Replace shared edge in parent edges array.\n\n      var edges = parent.edges;\n\n      for (var i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;\n      }\n\n      edges = node.edges;\n\n      for (i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;\n      }\n    } else {\n      node.transform = parent.transform;\n    }\n\n    if (node.children) {\n      node.children.forEach(function (child) {\n        recurse(child, node);\n      });\n    }\n\n    return node;\n  }\n\n  function forward(lambda, phi) {\n    var node = face(lambda, phi),\n        point = node.project([lambda * degrees, phi * degrees]),\n        t;\n\n    if (t = node.transform) {\n      return [t[0] * point[0] + t[1] * point[1] + t[2], -(t[3] * point[0] + t[4] * point[1] + t[5])];\n    }\n\n    point[1] = -point[1];\n    return point;\n  } // Naive inverse!  A faster solution would use bounding boxes, or even a\n  // polygonal quadtree.\n\n\n  if (hasInverse(root)) forward.invert = function (x, y) {\n    var coordinates = faceInvert(root, [x, -y]);\n    return coordinates && (coordinates[0] *= radians, coordinates[1] *= radians, coordinates);\n  };\n\n  function faceInvert(node, coordinates) {\n    var invert = node.project.invert,\n        t = node.transform,\n        point = coordinates;\n\n    if (t) {\n      t = inverse(t);\n      point = [t[0] * point[0] + t[1] * point[1] + t[2], t[3] * point[0] + t[4] * point[1] + t[5]];\n    }\n\n    if (invert && node === faceDegrees(p = invert(point))) return p;\n    var p,\n        children = node.children;\n\n    for (var i = 0, n = children && children.length; i < n; ++i) {\n      if (p = faceInvert(children[i], coordinates)) return p;\n    }\n  }\n\n  function faceDegrees(coordinates) {\n    return face(coordinates[0] * radians, coordinates[1] * radians);\n  }\n\n  var proj = projection(forward),\n      stream_ = proj.stream;\n\n  proj.stream = function (stream) {\n    var rotate = proj.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (proj.rotate([0, 0]), stream_(stream));\n    proj.rotate(rotate);\n\n    rotateStream.sphere = function () {\n      sphereStream.polygonStart();\n      sphereStream.lineStart();\n      outline(sphereStream, root);\n      sphereStream.lineEnd();\n      sphereStream.polygonEnd();\n    };\n\n    return rotateStream;\n  };\n\n  return proj;\n}\n\nfunction outline(stream, node, parent) {\n  var point,\n      edges = node.edges,\n      n = edges.length,\n      edge,\n      multiPoint = {\n    type: \"MultiPoint\",\n    coordinates: node.face\n  },\n      notPoles = node.face.filter(function (d) {\n    return abs(d[1]) !== 90;\n  }),\n      b = bounds({\n    type: \"MultiPoint\",\n    coordinates: notPoles\n  }),\n      inside = false,\n      j = -1,\n      dx = b[1][0] - b[0][0]; // TODO\n\n  var c = dx === 180 || dx === 360 ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2] : centroid(multiPoint); // First find the shared edge…\n\n  if (parent) while (++j < n) {\n    if (edges[j] === parent) break;\n  }\n  ++j;\n\n  for (var i = 0; i < n; ++i) {\n    edge = edges[(i + j) % n];\n\n    if (Array.isArray(edge)) {\n      if (!inside) {\n        stream.point((point = interpolate(edge[0], c)(epsilon))[0], point[1]);\n        inside = true;\n      }\n\n      stream.point((point = interpolate(edge[1], c)(epsilon))[0], point[1]);\n    } else {\n      inside = false;\n      if (edge !== parent) outline(stream, edge, node);\n    }\n  }\n} // Tests equality of two spherical points.\n\n\nfunction pointEqual(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n} // Finds a shared edge given two clockwise polygons.\n\n\nfunction sharedEdge(a, b) {\n  var x,\n      y,\n      n = a.length,\n      found = null;\n\n  for (var i = 0; i < n; ++i) {\n    x = a[i];\n\n    for (var j = b.length; --j >= 0;) {\n      y = b[j];\n\n      if (x[0] === y[0] && x[1] === y[1]) {\n        if (found) return [found, x];\n        found = x;\n      }\n    }\n  }\n} // Converts an array of n face vertices to an array of n + 1 edges.\n\n\nfunction faceEdges(face) {\n  var n = face.length,\n      edges = [];\n\n  for (var a = face[n - 1], i = 0; i < n; ++i) {\n    edges.push([a, a = face[i]]);\n  }\n\n  return edges;\n}\n\nfunction hasInverse(node) {\n  return node.project.invert || node.children && node.children.some(hasInverse);\n}","// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [[0, 90], [-90, 0], [0, 0], [90, 0], [180, 0], [0, -90]];\nexport default [[0, 2, 1], [0, 3, 2], [5, 1, 2], [5, 2, 3], [0, 1, 4], [0, 4, 3], [5, 4, 1], [5, 3, 4]].map(function (face) {\n  return face.map(function (i) {\n    return octahedron[i];\n  });\n});","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { pi } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(101.858).center([0, 45]);\n}","import { geoCentroid as centroid, geoProjection as projection } from \"d3-geo\";\nimport { collignonRaw } from \"../collignon\";\nimport { pi, sqrt } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function (x, y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    });\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function (face) {\n    return {\n      face: face,\n      project: faceProjection(face)\n    };\n  });\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function (d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n  return polyhedral(faces[0], function (lambda, phi) {\n    return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5];\n  }).scale(121.906).center([0, 48.5904]);\n}","import { geoCentroid as centroid, geoGnomonic as gnomonic } from \"d3-geo\";\nimport { asin, atan2, cos, degrees, max, min, pi, radians, sin } from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\nexport default function (faceProjection) {\n  faceProjection = faceProjection || function (face) {\n    var c = face.length === 6 ? centroid({\n      type: \"MultiPoint\",\n      coordinates: face\n    }) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function (face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794, a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794, a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794]), spherical([b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794, b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794, b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794]));\n      a = b;\n    }\n\n    return hexagon;\n  });\n  var cornerNormals = [];\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n  w5.forEach(function (hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n\n    for (var i = 0; i < n; ++i) {\n      w5.push([face[i], hexagon[(i * 2 + 2) % (2 * n)], hexagon[(i * 2 + 1) % (2 * n)]]);\n      parents.push(j);\n      normals.push(cross(cartesian(hexagon[(i * 2 + 2) % (2 * n)]), cartesian(hexagon[(i * 2 + 1) % (2 * n)])));\n    }\n  });\n  var faces = w5.map(function (face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n  parents.forEach(function (d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4 : lambda < 0 ? phi < 0 ? 2 : 0 : lambda < pi / 2 ? phi < 0 ? 3 : 1 : phi < 0 ? 7 : 5;\n    var n = cornerNormals[hexagon];\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1 : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2 : hexagon];\n  }\n\n  return polyhedral(faces[0], face).scale(110.625).center([0, 45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) {\n    s += a[i] * b[i];\n  }\n\n  return s;\n}\n\nfunction cross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // Converts 3D Cartesian to spherical coordinates (degrees).\n\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]) * degrees, asin(max(-1, min(1, cartesian[2]))) * degrees];\n} // Converts spherical coordinates (degrees) to 3D Cartesian.\n\n\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n}","export default function () {}","import { geoStream } from \"d3-geo\";\nimport noop from \"../noop\";\nimport clockwise from \"./clockwise\";\nimport contains from \"./contains\";\nexport default function (object, projection) {\n  var stream = projection.stream,\n      project;\n  if (!stream) throw new Error(\"invalid projection\");\n\n  switch (object && object.type) {\n    case \"Feature\":\n      project = projectFeature;\n      break;\n\n    case \"FeatureCollection\":\n      project = projectFeatureCollection;\n      break;\n\n    default:\n      project = projectGeometry;\n      break;\n  }\n\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function (f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function (o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n\n  switch (o.type) {\n    case \"Point\":\n      sink = sinkPoint;\n      break;\n\n    case \"MultiPoint\":\n      sink = sinkPoint;\n      break;\n\n    case \"LineString\":\n      sink = sinkLine;\n      break;\n\n    case \"MultiLineString\":\n      sink = sinkLine;\n      break;\n\n    case \"Polygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"MultiPolygon\":\n      sink = sinkPolygon;\n      break;\n\n    case \"Sphere\":\n      sink = sinkPolygon;\n      break;\n\n    default:\n      return null;\n  }\n\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\nvar sinkPoint = {\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  result: function result() {\n    var result = !points.length ? null : points.length < 2 ? {\n      type: \"Point\",\n      coordinates: points[0]\n    } : {\n      type: \"MultiPoint\",\n      coordinates: points\n    };\n    points = [];\n    return result;\n  }\n};\nvar sinkLine = {\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function result() {\n    var result = !lines.length ? null : lines.length < 2 ? {\n      type: \"LineString\",\n      coordinates: lines[0]\n    } : {\n      type: \"MultiLineString\",\n      coordinates: lines\n    };\n    lines = [];\n    return result;\n  }\n};\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function point(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function lineEnd() {\n    var n = points.length;\n\n    if (n) {\n      do {\n        points.push(points[0].slice());\n      } while (++n < 4);\n\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function result() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = []; // https://github.com/d3/d3/issues/1558\n\n    lines.forEach(function (ring) {\n      if (clockwise(ring)) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      var point = hole[0];\n      polygons.some(function (polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n    lines = [];\n    return !polygons.length ? null : polygons.length > 1 ? {\n      type: \"MultiPolygon\",\n      coordinates: polygons\n    } : {\n      type: \"Polygon\",\n      coordinates: polygons[0]\n    };\n  }\n};","export default function (ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0,\n      n,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n  while (++i < n) {\n    area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  }\n\n  return area <= 0;\n}","export default function (ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = false;\n\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n    if (yi > y ^ yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = !contains;\n  }\n\n  return contains;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, halfPi, pi, sign, sqrt1_2 } from \"../math\";\nexport default function (project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function (x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * (x0 + (y > 0 ? 1 : -1) * d),\n          y1 = -s * (y0 + (x > 0 ? 1 : -1) * d);\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n  return projection(projectQuincuncial).rotate([-90, -90, 45]).clipAngle(180 - 1e-3);\n}","import { gringortenRaw } from \"../gringorten\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(gringortenRaw).scale(176.423);\n}","import { guyouRaw } from \"../guyou\";\nimport quincuncial from \"./index\";\nexport default function () {\n  return quincuncial(guyouRaw).scale(111.48);\n}","export default function (o, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(coordinates) {\n    coordinates[0] = +coordinates[0].toFixed(digits);\n    coordinates[1] = +coordinates[1].toFixed(digits);\n  }\n\n  function quantizePoints(coordinates) {\n    coordinates.forEach(quantizePoint);\n  }\n\n  function quantizePolygon(coordinates) {\n    coordinates.forEach(quantizePoints);\n  }\n\n  function quantizeGeometry(o) {\n    if (o) switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n      case \"LineString\":\n        quantizePoints(o.coordinates);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        quantizePolygon(o.coordinates);\n        break;\n\n      case \"MultiPolygon\":\n        o.coordinates.forEach(quantizePolygon);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  function quantizeFeature(o) {\n    quantizeGeometry(o.geometry);\n  }\n\n  if (o) switch (o.type) {\n    case \"Feature\":\n      quantizeFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(quantizeFeature);\n      break;\n\n    default:\n      quantizeGeometry(o);\n      break;\n  }\n  return o;\n}","import { abs, acos, asin, atan, cos, epsilon, pi, sin, tan } from \"./math\";\nimport parallel1 from \"./parallel1\";\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [sin(E) * cotPhi, phi + (1 - cos(E)) * cotPhi - phi0];\n  } // TODO return null for points outside outline.\n\n\n  forward.invert = function (x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10,\n        delta;\n\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A, phi];\n  };\n\n  return forward;\n}\nexport default function () {\n  return parallel1(rectangularPolyconicRaw).scale(131.215);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians } from \"./math\";\nvar K = [[0.9986, -0.062], [1.0000, 0.0000], [0.9986, 0.0620], [0.9954, 0.1240], [0.9900, 0.1860], [0.9822, 0.2480], [0.9730, 0.3100], [0.9600, 0.3720], [0.9427, 0.4340], [0.9216, 0.4958], [0.8962, 0.5571], [0.8679, 0.6176], [0.8350, 0.6769], [0.7986, 0.7346], [0.7597, 0.7903], [0.7186, 0.8435], [0.6732, 0.8936], [0.6213, 0.9394], [0.5722, 0.9761], [0.5322, 1.0000]];\nK.forEach(function (d) {\n  d[1] *= 1.0144;\n});\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)];\n}\n\nrobinsonRaw.invert = function (x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50,\n          delta;\n\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n\n      break;\n    }\n  } while (--i0 >= 0);\n\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), phi * radians];\n};\n\nexport default function () {\n  return projection(robinsonRaw).scale(152.63);\n}","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { acos, asin, atan2, cos, degrees, radians, sin, sqrt } from \"./math\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [k * cosPhi * sin(lambda), k * sin(phi)];\n  }\n\n  forward.invert = function (x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [atan2(x * sinc, rho * sqrt(1 - sinc * sinc)), rho ? asin(y * sinc / rho) : 0];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [coordinates[0] * cosOmega / A, y / A];\n  }\n\n  forward.invert = function (x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\nexport default function () {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega); // As a multiple of radius.\n\n  p.distance = function (_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function (_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p.scale(432.147).clipAngle(acos(1 / distance) * degrees - 1e-6);\n}","var epsilon = 1e-4,\n    epsilonInverse = 1e4,\n    x0 = -180,\n    x0e = x0 + epsilon,\n    x1 = 180,\n    x1e = x1 - epsilon,\n    y0 = -90,\n    y0e = y0 + epsilon,\n    y1 = 90,\n    y1e = y1 - epsilon;\n\nfunction quantize(x) {\n  return Math.floor(x * epsilonInverse) / epsilonInverse;\n}\n\nfunction normalizePoint(y) {\n  return y === y0 || y === y1 ? [0, y] // pole\n  : [x0, quantize(y)]; // antimeridian\n}\n\nfunction clampPoint(p) {\n  if (p[0] <= x0e) p[0] = x0;else if (p[0] >= x1e) p[0] = x1;\n  if (p[1] <= y0e) p[1] = y0;else if (p[1] >= y1e) p[1] = y1;\n}\n\nfunction clampPoints(points) {\n  points.forEach(clampPoint);\n} // For each ring, detect where it crosses the antimeridian or pole.\n\n\nfunction extractFragments(polygon, fragments) {\n  for (var j = 0, m = polygon.length; j < m; ++j) {\n    var ring = polygon[j];\n    ring.polygon = polygon; // By default, assume that this ring doesn’t need any stitching.\n\n    fragments.push(ring);\n\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      var point = ring[i],\n          x = point[0],\n          y = point[1]; // If this is an antimeridian or polar point…\n\n      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n        clampPoint(point); // Advance through any antimeridian or polar points…\n\n        for (var k = i + 1; k < n; ++k) {\n          var pointk = ring[k],\n              xk = pointk[0],\n              yk = pointk[1];\n          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n        } // If this was just a single antimeridian or polar point,\n        // we don’t need to cut this ring into a fragment;\n        // we can just leave it as-is.\n\n\n        if (k === i + 1) continue; // Otherwise, if this is not the first point in the ring,\n        // cut the current fragment so that it ends at the current point.\n        // The current point is also normalized for later joining.\n\n        if (i) {\n          var fragmentBefore = ring.slice(0, i + 1);\n          fragmentBefore.polygon = polygon;\n          fragmentBefore[fragmentBefore.length - 1] = normalizePoint(y);\n          fragments[fragments.length - 1] = fragmentBefore;\n        } // If the ring started with an antimeridian fragment,\n        // we can ignore that fragment entirely.\n        else fragments.pop(); // If the remainder of the ring is an antimeridian fragment,\n        // move on to the next ring.\n\n\n        if (k >= n) break; // Otherwise, add the remaining ring fragment and continue.\n\n        fragments.push(ring = ring.slice(k - 1));\n        ring[0] = normalizePoint(ring[0][1]);\n        ring.polygon = polygon;\n        i = -1;\n        n = ring.length;\n      }\n    }\n  }\n\n  polygon.length = 0;\n} // Now stitch the fragments back together into rings.\n// TODO remove empty polygons.\n\n\nfunction stitchFragments(fragments) {\n  var i,\n      n = fragments.length; // To connect the fragments start-to-end, create a simple index by end.\n\n  var fragmentByStart = {},\n      fragmentByEnd = {},\n      fragment,\n      start,\n      startFragment,\n      end,\n      endFragment; // For each fragment…\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    start = fragment[0];\n    end = fragment[fragment.length - 1]; // If this fragment is closed, add it as a standalone ring.\n\n    if (start[0] === end[0] && start[1] === end[1]) {\n      fragment.polygon.push(fragment);\n      fragments[i] = null;\n      continue;\n    }\n\n    fragment.index = i;\n    fragmentByStart[start] = fragmentByEnd[end] = fragment;\n  } // For each open fragment…\n\n\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n\n    if (fragment) {\n      start = fragment[0];\n      end = fragment[fragment.length - 1];\n      startFragment = fragmentByEnd[start];\n      endFragment = fragmentByStart[end];\n      delete fragmentByStart[start];\n      delete fragmentByEnd[end]; // If this fragment is closed, add it as a standalone ring.\n\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment);\n        continue;\n      }\n\n      if (startFragment) {\n        delete fragmentByEnd[start];\n        delete fragmentByStart[startFragment[0]];\n        startFragment.pop(); // drop the shared coordinate\n\n        fragments[startFragment.index] = null;\n        fragment = startFragment.concat(fragment);\n        fragment.polygon = startFragment.polygon;\n\n        if (startFragment === endFragment) {\n          // Connect both ends to this single fragment to create a ring.\n          fragment.polygon.push(fragment);\n        } else {\n          fragment.index = n++;\n          fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n        }\n      } else if (endFragment) {\n        delete fragmentByStart[end];\n        delete fragmentByEnd[endFragment[endFragment.length - 1]];\n        fragment.pop(); // drop the shared coordinate\n\n        fragment = fragment.concat(endFragment);\n        fragment.polygon = endFragment.polygon;\n        fragment.index = n++;\n        fragments[endFragment.index] = null;\n        fragments.push(fragmentByStart[fragment[0]] = fragmentByEnd[fragment[fragment.length - 1]] = fragment);\n      } else {\n        fragment.push(fragment[0]); // close ring\n\n        fragment.polygon.push(fragment);\n      }\n    }\n  }\n}\n\nfunction stitchFeature(o) {\n  stitchGeometry(o.geometry);\n}\n\nfunction stitchGeometry(o) {\n  if (!o) return;\n  var fragments, i, n;\n\n  switch (o.type) {\n    case \"GeometryCollection\":\n      {\n        o.geometries.forEach(stitchGeometry);\n        return;\n      }\n\n    case \"Point\":\n      {\n        clampPoint(o.coordinates);\n        break;\n      }\n\n    case \"MultiPoint\":\n    case \"LineString\":\n      {\n        clampPoints(o.coordinates);\n        break;\n      }\n\n    case \"MultiLineString\":\n      {\n        o.coordinates.forEach(clampPoints);\n        break;\n      }\n\n    case \"Polygon\":\n      {\n        extractFragments(o.coordinates, fragments = []);\n        break;\n      }\n\n    case \"MultiPolygon\":\n      {\n        fragments = [], i = -1, n = o.coordinates.length;\n\n        while (++i < n) {\n          extractFragments(o.coordinates[i], fragments);\n        }\n\n        break;\n      }\n\n    default:\n      return;\n  }\n\n  stitchFragments(fragments);\n}\n\nexport default function (o) {\n  if (o) switch (o.type) {\n    case \"Feature\":\n      stitchFeature(o);\n      break;\n\n    case \"FeatureCollection\":\n      o.features.forEach(stitchFeature);\n      break;\n\n    default:\n      stitchGeometry(o);\n      break;\n  }\n  return o;\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { atan, quarterPi, sin, tan } from \"./math\";\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [lambda * (0.74482 - 0.34588 * s * s), 1.70711 * t];\n}\n\ntimesRaw.invert = function (x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [x / (0.74482 - 0.34588 * s * s), 2 * atan(t)];\n};\n\nexport default function () {\n  return projection(timesRaw).scale(146.153);\n}","import { geoInterpolate as interpolate, geoProjection as projection, geoRotation as rotation } from \"d3-geo\";\nimport { asin, degrees, pi, sin, radians } from \"./math\"; // Compute the origin as the midpoint of the two reference points.\n// Rotate one of the reference points by the origin.\n// Apply the spherical law of sines to compute gamma rotation.\n\nexport default function (raw, p0, p1) {\n  var i = interpolate(p0, p1),\n      o = i(0.5),\n      a = rotation([-o[0], -o[1]])(p0),\n      b = i.distance / 2,\n      y = -asin(sin(a[1] * radians) / sin(b)),\n      R = [-o[0], -o[1], -(a[0] > 0 ? pi - y : y) * degrees],\n      p = projection(raw(b)).rotate(R),\n      r = rotation(R),\n      center = p.center;\n  delete p.rotate;\n\n  p.center = function (_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p.clipAngle(90);\n}","import { geoGnomonicRaw as gnomonicRaw } from \"d3-geo\";\nimport { cos } from \"./math\";\nimport twoPoint from \"./twoPoint\";\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function (x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39]).clipAngle(60).scale(400);\n}\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}","import { geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw } from \"d3-geo\";\nimport { acos, atan2, cos, sin, sqrt, tan } from \"./math\";\nimport twoPoint from \"./twoPoint\"; // TODO clip to ellipse\n\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [(za - zb) / (2 * z0), ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)];\n  }\n\n  forward.invert = function (x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0), (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)];\n  };\n\n  return forward;\n}\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39]).clipAngle(130).scale(122.571);\n}\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2, sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2];\n}\n\nvanDerGrintenRaw.invert = function (x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x), sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))];\n};\n\nexport default function () {\n  return projection(vanDerGrintenRaw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [sign(lambda) * pi * x1, sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))];\n}\n\nvanDerGrinten2Raw.invert = function (x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [sign(x) * pi * (B - A), sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten2Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan } from \"./math\";\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A), pi * y1];\n}\n\nvanDerGrinten3Raw.invert = function (x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0, halfPi * sin(2 * atan(y1))];\n};\n\nexport default function () {\n  return projection(vanDerGrinten3Raw).scale(79.4183);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { abs, epsilon, halfPi, pi, sign, sqrt } from \"./math\";\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [sign(lambda) * halfPi * x1, sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)];\n}\n\nvanDerGrinten4Raw.invert = function (x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n\n  return [sign(x) * (sqrt(D * D + 4) + D) * pi / 4, halfPi * B];\n};\n\nexport default function () {\n  return projection(vanDerGrinten4Raw).scale(127.16);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { sqrt, pi } from \"./math\";\nimport { mollweideBromleyRaw } from \"./mollweide\";\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\nexport default function () {\n  return projection(wagner4Raw).scale(176.84);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { pi, sqrt } from \"./math\";\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function (x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function () {\n  return projection(wagner6Raw).scale(152.63);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt, tan } from \"./math\";\nexport function wagner7Raw(lambda, phi) {\n  var s = 0.90631 * sin(phi),\n      c0 = sqrt(1 - s * s),\n      c1 = sqrt(2 / (1 + c0 * cos(lambda /= 3)));\n  return [2.66723 * c0 * c1 * sin(lambda), 1.24104 * s * c1];\n}\n\nwagner7Raw.invert = function (x, y) {\n  var t1 = x / 2.66723,\n      t2 = y / 1.24104,\n      p = sqrt(t1 * t1 + t2 * t2),\n      c = 2 * asin(p / 2);\n  return [3 * atan2(x * tan(c), 2.66723 * p), p && asin(y * sin(c) / (1.24104 * 0.90631 * p))];\n};\n\nexport default function () {\n  return projection(wagner7Raw).scale(172.632);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [sinLambda * cosPhi - cosLambda * sin1_Phi, -cosLambda * cosPhi - sinLambda * sin1_Phi];\n}\n\nwiechelRaw.invert = function (x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [atan2(k * b, D * (1 + w)), D ? -asin(k * a / D) : 0];\n};\n\nexport default function () {\n  return projection(wiechelRaw).rotate([0, -90, 45]).scale(124.75).clipAngle(180 - 1e-3);\n}","import { geoProjection as projection } from \"d3-geo\";\nimport { aitoffRaw } from \"./aitoff\";\nimport { halfPi, epsilon, sin, cos, sqrt, abs, acos } from \"./math\";\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [(coordinates[0] + lambda / halfPi) / 2, (coordinates[1] + phi) / 2];\n}\n\nwinkel3Raw.invert = function (x, y) {\n  var lambda = x,\n      phi = y,\n      i = 25;\n\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n\n  return [lambda, phi];\n};\n\nexport default function () {\n  return projection(winkel3Raw).scale(158.837);\n}","export { default as geoAiry, airyRaw as geoAiryRaw } from \"./src/airy\";\nexport { default as geoAitoff, aitoffRaw as geoAitoffRaw } from \"./src/aitoff\";\nexport { default as geoArmadillo, armadilloRaw as geoArmadilloRaw } from \"./src/armadillo\";\nexport { default as geoAugust, augustRaw as geoAugustRaw } from \"./src/august\";\nexport { default as geoBaker, bakerRaw as geoBakerRaw } from \"./src/baker\";\nexport { default as geoBerghaus, berghausRaw as geoBerghausRaw } from \"./src/berghaus\";\nexport { default as geoBoggs, boggsRaw as geoBoggsRaw } from \"./src/boggs\";\nexport { default as geoBonne, bonneRaw as geoBonneRaw } from \"./src/bonne\";\nexport { default as geoBottomley, bottomleyRaw as geoBottomleyRaw } from \"./src/bottomley\";\nexport { default as geoBromley, bromleyRaw as geoBromleyRaw } from \"./src/bromley\";\nexport { default as geoChamberlin, chamberlinRaw as geoChamberlinRaw, chamberlinAfrica as geoChamberlinAfrica } from \"./src/chamberlin\";\nexport { default as geoCollignon, collignonRaw as geoCollignonRaw } from \"./src/collignon\";\nexport { default as geoCraig, craigRaw as geoCraigRaw } from \"./src/craig\";\nexport { default as geoCraster, crasterRaw as geoCrasterRaw } from \"./src/craster\";\nexport { default as geoCylindricalEqualArea, cylindricalEqualAreaRaw as geoCylindricalEqualAreaRaw } from \"./src/cylindricalEqualArea\";\nexport { default as geoCylindricalStereographic, cylindricalStereographicRaw as geoCylindricalStereographicRaw } from \"./src/cylindricalStereographic\";\nexport { default as geoEckert1, eckert1Raw as geoEckert1Raw } from \"./src/eckert1.js\";\nexport { default as geoEckert2, eckert2Raw as geoEckert2Raw } from \"./src/eckert2.js\";\nexport { default as geoEckert3, eckert3Raw as geoEckert3Raw } from \"./src/eckert3.js\";\nexport { default as geoEckert4, eckert4Raw as geoEckert4Raw } from \"./src/eckert4.js\";\nexport { default as geoEckert5, eckert5Raw as geoEckert5Raw } from \"./src/eckert5.js\";\nexport { default as geoEckert6, eckert6Raw as geoEckert6Raw } from \"./src/eckert6.js\";\nexport { default as geoEisenlohr, eisenlohrRaw as geoEisenlohrRaw } from \"./src/eisenlohr.js\";\nexport { default as geoFahey, faheyRaw as geoFaheyRaw } from \"./src/fahey.js\";\nexport { default as geoFoucaut, foucautRaw as geoFoucautRaw } from \"./src/foucaut.js\";\nexport { default as geoGilbert } from \"./src/gilbert.js\";\nexport { default as geoGingery, gingeryRaw as geoGingeryRaw } from \"./src/gingery.js\";\nexport { default as geoGinzburg4, ginzburg4Raw as geoGinzburg4Raw } from \"./src/ginzburg4.js\";\nexport { default as geoGinzburg5, ginzburg5Raw as geoGinzburg5Raw } from \"./src/ginzburg5.js\";\nexport { default as geoGinzburg6, ginzburg6Raw as geoGinzburg6Raw } from \"./src/ginzburg6.js\";\nexport { default as geoGinzburg8, ginzburg8Raw as geoGinzburg8Raw } from \"./src/ginzburg8.js\";\nexport { default as geoGinzburg9, ginzburg9Raw as geoGinzburg9Raw } from \"./src/ginzburg9.js\";\nexport { default as geoGringorten, gringortenRaw as geoGringortenRaw } from \"./src/gringorten.js\";\nexport { default as geoGuyou, guyouRaw as geoGuyouRaw } from \"./src/guyou.js\";\nexport { default as geoHammer, hammerRaw as geoHammerRaw } from \"./src/hammer.js\";\nexport { default as geoHammerRetroazimuthal, hammerRetroazimuthalRaw as geoHammerRetroazimuthalRaw } from \"./src/hammerRetroazimuthal.js\";\nexport { default as geoHealpix, healpixRaw as geoHealpixRaw } from \"./src/healpix.js\";\nexport { default as geoHill, hillRaw as geoHillRaw } from \"./src/hill.js\";\nexport { default as geoHomolosine, homolosineRaw as geoHomolosineRaw } from \"./src/homolosine.js\";\nexport { default as geoInterrupt } from \"./src/interrupted/index\";\nexport { default as geoInterruptedBoggs } from \"./src/interrupted/boggs\";\nexport { default as geoInterruptedHomolosine } from \"./src/interrupted/homolosine\";\nexport { default as geoInterruptedMollweide } from \"./src/interrupted/mollweide\";\nexport { default as geoInterruptedMollweideHemispheres } from \"./src/interrupted/mollweideHemispheres\";\nexport { default as geoInterruptedSinuMollweide } from \"./src/interrupted/sinuMollweide\";\nexport { default as geoInterruptedSinusoidal } from \"./src/interrupted/sinusoidal\";\nexport { default as geoKavrayskiy7, kavrayskiy7Raw as geoKavrayskiy7Raw } from \"./src/kavrayskiy7.js\";\nexport { default as geoLagrange, lagrangeRaw as geoLagrangeRaw } from \"./src/lagrange.js\";\nexport { default as geoLarrivee, larriveeRaw as geoLarriveeRaw } from \"./src/larrivee\";\nexport { default as geoLaskowski, laskowskiRaw as geoLaskowskiRaw } from \"./src/laskowski\";\nexport { default as geoLittrow, littrowRaw as geoLittrowRaw } from \"./src/littrow.js\";\nexport { default as geoLoximuthal, loximuthalRaw as geoLoximuthalRaw } from \"./src/loximuthal.js\";\nexport { default as geoMiller, millerRaw as geoMillerRaw } from \"./src/miller\";\nexport { default as geoModifiedStereographic, modifiedStereographicRaw as geoModifiedStereographicRaw, modifiedStereographicAlaska as geoModifiedStereographicAlaska, modifiedStereographicGs48 as geoModifiedStereographicGs48, modifiedStereographicGs50 as geoModifiedStereographicGs50, modifiedStereographicMiller as geoModifiedStereographicMiller, modifiedStereographicLee as geoModifiedStereographicLee } from \"./src/modifiedStereographic\";\nexport { default as geoMollweide, mollweideRaw as geoMollweideRaw } from \"./src/mollweide\";\nexport { default as geoMtFlatPolarParabolic, mtFlatPolarParabolicRaw as geoMtFlatPolarParabolicRaw } from \"./src/mtFlatPolarParabolic\";\nexport { default as geoMtFlatPolarQuartic, mtFlatPolarQuarticRaw as geoMtFlatPolarQuarticRaw } from \"./src/mtFlatPolarQuartic\";\nexport { default as geoMtFlatPolarSinusoidal, mtFlatPolarSinusoidalRaw as geoMtFlatPolarSinusoidalRaw } from \"./src/mtFlatPolarSinusoidal\";\nexport { default as geoNaturalEarth, naturalEarthRaw as geoNaturalEarthRaw } from \"./src/naturalEarth\";\nexport { default as geoNellHammer, nellHammerRaw as geoNellHammerRaw } from \"./src/nellHammer\";\nexport { default as geoPatterson, pattersonRaw as geoPattersonRaw } from \"./src/patterson\";\nexport { default as geoPolyconic, polyconicRaw as geoPolyconicRaw } from \"./src/polyconic\";\nexport { default as geoPolyhedral } from \"./src/polyhedral/index.js\";\nexport { default as geoPolyhedralButterfly } from \"./src/polyhedral/butterfly.js\";\nexport { default as geoPolyhedralCollignon } from \"./src/polyhedral/collignon.js\";\nexport { default as geoPolyhedralWaterman } from \"./src/polyhedral/waterman.js\";\nexport { default as geoProject } from \"./src/project/index\";\nexport { default as geoGringortenQuincuncial } from \"./src/quincuncial/gringorten.js\";\nexport { default as geoPeirceQuincuncial } from \"./src/quincuncial/peirce.js\";\nexport { default as geoPierceQuincuncial } from \"./src/quincuncial/peirce.js\"; // DEPRECATED misspelling\n\nexport { default as geoQuantize } from \"./src/quantize\";\nexport { default as geoQuincuncial } from \"./src/quincuncial/index.js\";\nexport { default as geoRectangularPolyconic, rectangularPolyconicRaw as geoRectangularPolyconicRaw } from \"./src/rectangularPolyconic\";\nexport { default as geoRobinson, robinsonRaw as geoRobinsonRaw } from \"./src/robinson\";\nexport { default as geoSatellite, satelliteRaw as geoSatelliteRaw } from \"./src/satellite\";\nexport { default as geoSinuMollweide, sinuMollweideRaw as geoSinuMollweideRaw } from \"./src/sinuMollweide\";\nexport { default as geoSinusoidal, sinusoidalRaw as geoSinusoidalRaw } from \"./src/sinusoidal\";\nexport { default as geoStitch } from \"./src/stitch\";\nexport { default as geoTimes, timesRaw as geoTimesRaw } from \"./src/times\";\nexport { default as geoTwoPointAzimuthal, twoPointAzimuthalRaw as geoTwoPointAzimuthalRaw, twoPointAzimuthalUsa as geoTwoPointAzimuthalUsa } from \"./src/twoPointAzimuthal\";\nexport { default as geoTwoPointEquidistant, twoPointEquidistantRaw as geoTwoPointEquidistantRaw, twoPointEquidistantUsa as geoTwoPointEquidistantUsa } from \"./src/twoPointEquidistant\";\nexport { default as geoVanDerGrinten, vanDerGrintenRaw as geoVanDerGrintenRaw } from \"./src/vanDerGrinten\";\nexport { default as geoVanDerGrinten2, vanDerGrinten2Raw as geoVanDerGrinten2Raw } from \"./src/vanDerGrinten2\";\nexport { default as geoVanDerGrinten3, vanDerGrinten3Raw as geoVanDerGrinten3Raw } from \"./src/vanDerGrinten3\";\nexport { default as geoVanDerGrinten4, vanDerGrinten4Raw as geoVanDerGrinten4Raw } from \"./src/vanDerGrinten4\";\nexport { default as geoWagner4, wagner4Raw as geoWagner4Raw } from \"./src/wagner4.js\";\nexport { default as geoWagner6, wagner6Raw as geoWagner6Raw } from \"./src/wagner6.js\";\nexport { default as geoWagner7, wagner7Raw as geoWagner7Raw } from \"./src/wagner7.js\";\nexport { default as geoWiechel, wiechelRaw as geoWiechelRaw } from \"./src/wiechel.js\";\nexport { default as geoWinkel3, winkel3Raw as geoWinkel3Raw } from \"./src/winkel3\";","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending.js\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      this.range(domain);\n      break;\n\n    default:\n      this.range(range).domain(domain);\n      break;\n  }\n\n  return this;\n}\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0:\n      break;\n\n    case 1:\n      this.interpolator(domain);\n      break;\n\n    default:\n      this.interpolator(interpolator).domain(domain);\n      break;\n  }\n\n  return this;\n}","import { initRange } from \"./init\";\nexport var implicit = Symbol(\"implicit\");\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\",\n        i = index.get(key);\n\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = _[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var value = _step.value;\n        var key = value + \"\";\n        if (index.has(key)) continue;\n        index.set(key, domain.push(value));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return scale;\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n  return scale;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return +x;\n}","import { bisect } from \"d3-array\";\nimport { interpolate as interpolateValue, interpolateNumber, interpolateRound } from \"d3-interpolate\";\nimport constant from \"./constant\";\nimport number from \"./number\";\nvar unit = [0, 1];\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0],\n      b = domain[domain.length - 1],\n      t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}","import { tickStep } from \"d3-array\";\nimport { format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound } from \"d3-format\";\nexport default function (start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n  }\n\n  return format(specifier);\n}","import { ticks, tickIncrement } from \"d3-array\";\nimport continuous, { copy, identity } from \"./continuous\";\nimport { initRange } from \"./init\";\nimport tickFormat from \"./tickFormat\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n  return linearish(scale);\n}","export { default as scaleBand, point as scalePoint } from \"./band\";\nexport { default as scaleIdentity } from \"./identity\";\nexport { default as scaleLinear } from \"./linear\";\nexport { default as scaleLog } from \"./log\";\nexport { default as scaleSymlog } from \"./symlog\";\nexport { default as scaleOrdinal, implicit as scaleImplicit } from \"./ordinal\";\nexport { default as scalePow, sqrt as scaleSqrt } from \"./pow\";\nexport { default as scaleQuantile } from \"./quantile\";\nexport { default as scaleQuantize } from \"./quantize\";\nexport { default as scaleThreshold } from \"./threshold\";\nexport { default as scaleTime } from \"./time\";\nexport { default as scaleUtc } from \"./utcTime\";\nexport { default as scaleSequential, sequentialLog as scaleSequentialLog, sequentialPow as scaleSequentialPow, sequentialSqrt as scaleSequentialSqrt, sequentialSymlog as scaleSequentialSymlog } from \"./sequential\";\nexport { default as scaleSequentialQuantile } from \"./sequentialQuantile\";\nexport { default as scaleDiverging, divergingLog as scaleDivergingLog, divergingPow as scaleDivergingPow, divergingSqrt as scaleDivergingSqrt, divergingSymlog as scaleDivergingSymlog } from \"./diverging\";\nexport { default as tickFormat } from \"./tickFormat\";","export default function (x) {\n  return x;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    point[0] = (x0 += point[0]) * kx + dx;\n    point[1] = (y0 += point[1]) * ky + dy;\n    return point;\n  };\n}","import transform from \"./transform\";\nexport default function (topology) {\n  var bbox = topology.bbox;\n\n  function bboxPoint(p0) {\n    p1[0] = p0[0], p1[1] = p0[1], t(p1);\n    if (p1[0] < x0) x0 = p1[0];\n    if (p1[0] > x1) x1 = p1[0];\n    if (p1[1] < y0) y0 = p1[1];\n    if (p1[1] > y1) y1 = p1[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(bboxGeometry);\n        break;\n\n      case \"Point\":\n        bboxPoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(bboxPoint);\n        break;\n    }\n  }\n\n  if (!bbox) {\n    var t = transform(topology),\n        p0,\n        p1 = new Array(2),\n        name,\n        x0 = Infinity,\n        y0 = x0,\n        x1 = -x0,\n        y1 = -x0;\n    topology.arcs.forEach(function (arc) {\n      var i = -1,\n          n = arc.length;\n\n      while (++i < n) {\n        p0 = arc[i], p1[0] = p0[0], p1[1] = p0[1], t(p1, i);\n        if (p1[0] < x0) x0 = p1[0];\n        if (p1[0] > x1) x1 = p1[0];\n        if (p1[1] < y0) y0 = p1[1];\n        if (p1[1] > y1) y1 = p1[1];\n      }\n    });\n\n    for (name in topology.objects) {\n      bboxGeometry(topology.objects[name]);\n    }\n\n    bbox = topology.bbox = [x0, y0, x1, y1];\n  }\n\n  return bbox;\n}","export default function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n}","import reverse from \"./reverse\";\nimport transform from \"./transform\";\nexport default function (topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k].slice(), k));\n    }\n\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p.slice());\n  }\n\n  function line(arcs) {\n    var points = [];\n\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }\n\n    if (points.length < 2) points.push(points[0].slice());\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n\n    while (points.length < 4) {\n      points.push(points[0].slice());\n    }\n\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n\n  return geometry(o);\n}","export default function (topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1; // Stitch empty arcs first, since they may be subsumed by other arcs.\n\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        t;\n\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f,\n        g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        p0 = arc[0],\n        p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\nexport default function (topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) {\n    arcs[i] = i;\n  }\n  return {\n    type: \"MultiLineString\",\n    arcs: stitch(topology, arcs)\n  };\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({\n      i: i,\n      g: geom\n    });\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"LineString\":\n        extract1(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        extract2(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        extract3(o.arcs);\n        break;\n    }\n  }\n\n  geometry(object);\n  geomsByArc.forEach(filter == null ? function (geoms) {\n    arcs.push(geoms[0].i);\n  } : function (geoms) {\n    if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i);\n  });\n  return arcs;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1,\n      n = ring.length,\n      a,\n      b = ring[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  }\n\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function (topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"Polygon\":\n        extract(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        o.arcs.forEach(extract);\n        break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function (ring) {\n      ring.forEach(function (arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {\n      type: \"Polygon\",\n      arcs: [ring]\n    }).coordinates[0]);\n  }\n\n  polygons.forEach(function (polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function (polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n  polygons.forEach(function (polygon) {\n    delete polygon._;\n  });\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function (polygons) {\n      var arcs = [],\n          n; // Extract the exterior (unique) arcs.\n\n      polygons.forEach(function (polygon) {\n        polygon.forEach(function (ring) {\n          ring.forEach(function (arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      }); // Stitch the arcs into one or more rings.\n\n      arcs = stitch(topology, arcs); // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}","export default function (a, x) {\n  var lo = 0,\n      hi = a.length;\n\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;else hi = mid;\n  }\n\n  return lo;\n}","import bisect from \"./bisect\";\nexport default function (objects) {\n  var indexesByArc = {},\n      // arc index -> array of object indexes\n  neighbors = objects.map(function () {\n    return [];\n  });\n\n  function line(arcs, i) {\n    arcs.forEach(function (a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function (arc) {\n      line(arc, i);\n    });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function (o) {\n      geometry(o, i);\n    });else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function MultiPolygon(arcs, i) {\n      arcs.forEach(function (arc) {\n        polygon(arc, i);\n      });\n    }\n  };\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j],\n            ik = indexes[k],\n            n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}","import bbox from \"./bbox\";\nexport default function (topology, n) {\n  if (!((n = Math.floor(n)) >= 2)) throw new Error(\"n must be ≥2\");\n  if (topology.transform) throw new Error(\"already quantized\");\n  var bb = bbox(topology),\n      name,\n      dx = bb[0],\n      kx = (bb[2] - dx) / (n - 1) || 1,\n      dy = bb[1],\n      ky = (bb[3] - dy) / (n - 1) || 1;\n\n  function quantizePoint(p) {\n    p[0] = Math.round((p[0] - dx) / kx);\n    p[1] = Math.round((p[1] - dy) / ky);\n  }\n\n  function quantizeGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        o.coordinates.forEach(quantizePoint);\n        break;\n    }\n  }\n\n  topology.arcs.forEach(function (arc) {\n    var i = 1,\n        j = 1,\n        n = arc.length,\n        pi = arc[0],\n        x0 = pi[0] = Math.round((pi[0] - dx) / kx),\n        y0 = pi[1] = Math.round((pi[1] - dy) / ky),\n        pj,\n        x1,\n        y1;\n\n    for (; i < n; ++i) {\n      pi = arc[i];\n      x1 = Math.round((pi[0] - dx) / kx);\n      y1 = Math.round((pi[1] - dy) / ky);\n\n      if (x1 !== x0 || y1 !== y0) {\n        pj = arc[j++];\n        pj[0] = x1 - x0, x0 = x1;\n        pj[1] = y1 - y0, y0 = y1;\n      }\n    }\n\n    if (j < 2) {\n      pj = arc[j++];\n      pj[0] = 0;\n      pj[1] = 0;\n    }\n\n    arc.length = j;\n  });\n\n  for (name in topology.objects) {\n    quantizeGeometry(topology.objects[name]);\n  }\n\n  topology.transform = {\n    scale: [kx, ky],\n    translate: [dx, dy]\n  };\n  return topology;\n}","import identity from \"./identity\";\nexport default function (topology) {\n  if ((transform = topology.transform) == null) return identity;\n  var transform,\n      x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (point, i) {\n    if (!i) x0 = y0 = 0;\n    var x1 = Math.round((point[0] - dx) / kx),\n        y1 = Math.round((point[1] - dy) / ky);\n    point[0] = x1 - x0, x0 = x1;\n    point[1] = y1 - y0, y0 = y1;\n    return point;\n  };\n}","export { default as bbox } from \"./src/bbox\";\nexport { default as feature } from \"./src/feature\";\nexport { default as mesh, meshArcs } from \"./src/mesh\";\nexport { default as merge, mergeArcs } from \"./src/merge\";\nexport { default as neighbors } from \"./src/neighbors\";\nexport { default as quantize } from \"./src/quantize\";\nexport { default as transform } from \"./src/transform\";\nexport { default as untransform } from \"./src/untransform\";"],"sourceRoot":""}