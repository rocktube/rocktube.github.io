{"version":3,"sources":["page/statistics/components/Bar.js"],"names":["tooltip","backgroundColor","border","BarChild","_ref","favourite","_useIndex","useIndex","_useIndex2","Object","D_Repos_tree_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","activeIndex","setActiveIndex","data","yearData","countBy","item","docYear","keys","i","Number","slice","documentaries","hasOwnProperty","push","name","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","recharts__WEBPACK_IMPORTED_MODULE_2__","style","margin","strokeDasharray","stroke","dataKey","assign","map","entry","index","cursor","fill","key","concat","contentStyle"],"mappings":"+IAMMA,EAAU,CACdC,gBAAiB,yBACjBC,OAAQ,QAuCKC,UA5Bf,SAAAC,GAME,IAN8B,IAAZC,EAAYD,EAAZC,UAAYC,EACQC,cADRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBK,EADuBH,EAAA,GACVI,EADUJ,EAAA,GAGxBK,EAAO,GACPC,EAAWC,YAAQV,EAAW,SAAAW,GAAI,OAAIA,EAAKC,UAC3CC,EAAOT,OAAOS,KAAKJ,GAChBK,EAAIC,OAAOF,EAAK,IAAKC,GAAKC,OAAOF,EAAKG,OAAO,GAAG,IAAKF,IAAK,CACjE,IAAMG,EAAgBR,EAASS,eAAeJ,GAAKL,EAASK,GAAK,EACjEN,EAAKW,KAAK,CAACC,KAAMN,EAAGG,kBAGtB,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUhB,KAAMA,EAAMiB,MAAO,CAACC,OAAQ,wBACpCL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeG,gBAAgB,MAAMC,OAAO,2BAC5CP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOK,QAAQ,OAAOD,OAAO,2BAC7BP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOI,OAAO,2BACdP,EAAAC,EAAAC,cAACC,EAAA,EAADpB,OAAA0B,OAAA,CAAKD,QAAQ,iBAAoBtB,GAC9BC,EAAKuB,IAAI,SAACC,EAAOC,GAAR,OAAkBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMU,OAAO,UACPC,KAAMF,IAAU3B,EAAc,yBAA2B,0BACzD8B,IAAG,QAAAC,OAAUJ,QAEjDZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASU,QAAQ,EAAOI,aAAc3C","file":"static/js/13.855a28e4.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell } from 'recharts'\n\nimport { countBy, useIndex } from 'utils'\n\nconst tooltip = {\n  backgroundColor: 'rgba(128,128,128,0.75)',\n  border: 'none'\n}\n\n/**\n * BarChild\n * @type {{favourite: Array}}\n */\nBarChild.propTypes = {\n  favourite: PropTypes.array.isRequired\n}\n\nfunction BarChild ({favourite}) {\n  const [activeIndex, setActiveIndex] = useIndex()\n\n  const data = []\n  const yearData = countBy(favourite, item => item.docYear)\n  const keys = Object.keys(yearData)\n  for (let i = Number(keys[0]); i <= Number(keys.slice(-1)[0]); i++) {\n    const documentaries = yearData.hasOwnProperty(i) ? yearData[i] : 0\n    data.push({name: i, documentaries})\n  }\n\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data} style={{margin: '10px 30px 5px -30px'}}>\n        <CartesianGrid strokeDasharray=\"5 5\" stroke=\"rgba(105,105,105, 0.5)\"/>\n        <XAxis dataKey=\"name\" stroke=\"rgba(105,105,105, 0.8)\"/>\n        <YAxis stroke=\"rgba(105,105,105, 0.8)\"/>\n        <Bar dataKey=\"documentaries\" {...setActiveIndex}>\n          {data.map((entry, index) => <Cell cursor=\"pointer\"\n                                            fill={index === activeIndex ? 'rgba(200,200,200,0.75)' : 'rgba(128,128,128, 0.85)'}\n                                            key={`cell-${index}`}/>)}\n        </Bar>\n        <Tooltip cursor={false} contentStyle={tooltip}/>\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default BarChild"],"sourceRoot":""}